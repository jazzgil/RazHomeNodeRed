[
    {
        "id": "38ee4b91.5dc3e4",
        "type": "tab",
        "label": "General",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d4b1bd47.24b07",
        "type": "tab",
        "label": "Popup Master",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f8865110.44c59",
        "type": "tab",
        "label": "Announce / Presence",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3e6b6884.b00d58",
        "type": "tab",
        "label": "Boiler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "283de01b.130d1",
        "type": "tab",
        "label": "Devices",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5515e8ec.3a0e28",
        "type": "tab",
        "label": "Scrap",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b83f640b.f9b038",
        "type": "mqtt-broker",
        "name": "Mosquito",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "d9eb1526.34e608",
        "type": "openhab2-controller",
        "name": "My OpenHab",
        "protocol": "http",
        "host": "localhost",
        "port": "10203",
        "path": "",
        "username": "",
        "password": ""
    },
    {
        "id": "4b5b0c00.24def4",
        "type": "googlehome-config-node",
        "ipaddress": "10.20.30.121",
        "name": "Kitchen Speaker",
        "language": "en"
    },
    {
        "id": "18812ff0.9ab48",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5ae07aa.1bb0f84",
        "type": "ui_tab",
        "name": "Presence",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7c090a19.aff884",
        "type": "ui_group",
        "name": "מי בבית",
        "tab": "5ae07aa.1bb0f84",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "26ad0dca.e7b0d2",
        "type": "ui_group",
        "name": "דוד",
        "tab": "aa347550.c05b48",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "556e67a9.8953b8",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "openhab",
        "name": "InfluxDB",
        "usetls": false,
        "tls": ""
    },
    {
        "id": "4e9db466.47d21c",
        "type": "telegrambot-config",
        "botname": "RazHome.bot",
        "usernames": "",
        "chatIds": "",
        "pollInterval": "300"
    },
    {
        "id": "b0f41f92.c6fce",
        "type": "mqtt-broker",
        "name": "mqtt local broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "aa347550.c05b48",
        "type": "ui_tab",
        "name": "מכשירים",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e875ebf7.52ed48",
        "type": "ui_group",
        "name": " סדין חשמלי - גראפ",
        "tab": "6a72a29b.3a027c",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "baef7f4.bf6248",
        "type": "telegrambot-config",
        "botname": "GiladsTestBot987",
        "usernames": "",
        "chatIds": "",
        "pollInterval": "300"
    },
    {
        "id": "2bee767.051258a",
        "type": "ui_group",
        "name": "סלון",
        "tab": "aa347550.c05b48",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "b1c9a4fb.9d1828",
        "type": "ui_group",
        "name": "למטה",
        "tab": "aa347550.c05b48",
        "order": 3,
        "disp": true,
        "width": "2",
        "collapse": false
    },
    {
        "id": "e21dc06f.7833",
        "type": "ui_group",
        "name": "קומה עליונה",
        "tab": "aa347550.c05b48",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": false
    },
    {
        "id": "20a56e06.eb1d32",
        "type": "ui_tab",
        "name": "WaterTank",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "e7074671.132b98",
        "type": "ui_group",
        "name": "WaterTank",
        "tab": "20a56e06.eb1d32",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6a72a29b.3a027c",
        "type": "ui_tab",
        "name": "Graph_HeatPads",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "e31b9e51.9cf5",
        "type": "ui_group",
        "name": "תריס",
        "tab": "aa347550.c05b48",
        "order": 4,
        "disp": true,
        "width": "1",
        "collapse": false
    },
    {
        "id": "4e465e1b.3d43e",
        "type": "ui_group",
        "name": "MQTT Log",
        "tab": "a64ba65.849e058",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "a64ba65.849e058",
        "type": "ui_tab",
        "z": "38ee4b91.5dc3e4",
        "name": "MQTT Log",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7cdedc06.5fd6d4",
        "type": "ui_group",
        "name": "כללי",
        "tab": "aa347550.c05b48",
        "order": 7,
        "disp": false,
        "width": "1",
        "collapse": false
    },
    {
        "id": "57515f6f.3465",
        "type": "ui_group",
        "name": "Secure",
        "tab": "c6ff8350.66256",
        "disp": true,
        "width": "6"
    },
    {
        "id": "a42bb944.e078b8",
        "type": "ui_group",
        "name": "pin",
        "tab": "c6ff8350.66256",
        "disp": false,
        "width": "1"
    },
    {
        "id": "c6ff8350.66256",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": 1
    },
    {
        "id": "14a08956.667327",
        "type": "denon-controller",
        "name": "",
        "host": "10.20.30.70",
        "port": "23"
    },
    {
        "id": "5c7f7de0.4497c4",
        "type": "ui_group",
        "name": "Default Group",
        "tab": "e06225db.035ba8",
        "disp": true,
        "width": "16"
    },
    {
        "id": "e06225db.035ba8",
        "type": "ui_tab",
        "name": "Home Tab",
        "icon": "dashboard"
    },
    {
        "id": "456150fc.00f6b",
        "type": "hikcamera-credentials",
        "screen_name": "RoofTop"
    },
    {
        "id": "7e71b679.598338",
        "type": "ui_group",
        "name": "Default",
        "tab": "35ee14c9.e562fc",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "35ee14c9.e562fc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "733913b0.7112ac",
        "type": "ui_tab",
        "name": "RoofTop History",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e594d926.38f938",
        "type": "ui_group",
        "name": "RoofTop History",
        "tab": "733913b0.7112ac",
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c7bb58b6.261158",
        "type": "ui_group",
        "name": "עבודה",
        "tab": "aa347550.c05b48",
        "order": 8,
        "disp": true,
        "width": "2",
        "collapse": false
    },
    {
        "id": "19b1005b.daf9a",
        "type": "mqtt in",
        "z": "f8865110.44c59",
        "name": "",
        "topic": "+/+/say",
        "qos": "2",
        "datatype": "auto",
        "broker": "b83f640b.f9b038",
        "x": 70,
        "y": 100,
        "wires": [
            [
                "bcbc1481.027f48"
            ]
        ]
    },
    {
        "id": "485ea403.89523c",
        "type": "debug",
        "z": "f8865110.44c59",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "6f1d37fd.f65b18",
        "type": "mqtt in",
        "z": "f8865110.44c59",
        "name": "",
        "topic": "esp/L1/Garage/state",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "ba43203e.8ae85"
            ]
        ]
    },
    {
        "id": "40510d75.49dac4",
        "type": "cast-to-client",
        "z": "f8865110.44c59",
        "name": "Google Home",
        "url": "",
        "contentType": "",
        "message": "",
        "language": "en",
        "ip": "",
        "port": "",
        "volume": "",
        "x": 1320,
        "y": 40,
        "wires": [
            []
        ],
        "icon": "node-red-contrib-cast/google-home2.svg"
    },
    {
        "id": "d3f115ff.93a3a8",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Check googleHomeState, Vol 4-6",
        "func": "let d = new Date();\nlet m = d.getHours() * 60 + d.getMinutes();\n\nmsg.payload = {\n    // lowerVolumeLimit: 40, \n    // upperVolumeLimit: 60,\n    volume: m > 23*60 || m < 3*60 || (m > 5*60 && m < 9*60) ? 40 : 50,\n    message: msg.payload\n};\nmsg.ip = global.get(\"googleHomeIP\");\n\nreturn flow.get(\"googleHomeState\") === \"PLAY\"? \n    null : msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 40,
        "wires": [
            [
                "40510d75.49dac4"
            ]
        ]
    },
    {
        "id": "8ccf887b.1af3e8",
        "type": "inject",
        "z": "f8865110.44c59",
        "name": "inject sample text...",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "The great fox jumps over the hound",
        "payloadType": "str",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "bcbc1481.027f48"
            ]
        ]
    },
    {
        "id": "bcbc1481.027f48",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Funnel",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 40,
        "wires": [
            [
                "485ea403.89523c",
                "d3f115ff.93a3a8",
                "5d62f704.3401c8"
            ]
        ]
    },
    {
        "id": "6e07aa94.3a4bc4",
        "type": "mqtt out",
        "z": "d4b1bd47.24b07",
        "name": "> MQTT",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "b83f640b.f9b038",
        "x": 780,
        "y": 540,
        "wires": []
    },
    {
        "id": "7407b0ea.bc79a",
        "type": "mqtt in",
        "z": "f8865110.44c59",
        "name": "",
        "topic": "+/+/+/say",
        "qos": "2",
        "datatype": "auto",
        "broker": "b83f640b.f9b038",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "bcbc1481.027f48"
            ]
        ]
    },
    {
        "id": "42803f42.e834e",
        "type": "mqtt in",
        "z": "f8865110.44c59",
        "name": "",
        "topic": "+/+/+/+/say",
        "qos": "2",
        "datatype": "auto",
        "broker": "b83f640b.f9b038",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "7b9733cb.e6a58c"
            ]
        ]
    },
    {
        "id": "f4e63f16.fa2d1",
        "type": "cronplus",
        "z": "f8865110.44c59",
        "d": true,
        "name": "Schedules",
        "outputField": "payload",
        "timeZone": "",
        "options": [
            {
                "topic": "esp/L3/HeatPad/Parents/cmd",
                "payload": "37",
                "type": "str",
                "expression": "0 0 23 * * sun,mon,tue,wed,thu,sat"
            },
            {
                "topic": "esp/L3/HeatPad/Parents/cmd",
                "payload": "37",
                "type": "str",
                "expression": "0 40 14 * * fri"
            },
            {
                "topic": "esp/L3/HeatPad/Parents/cmd",
                "payload": "37",
                "type": "str",
                "expression": "0 0 0,15 * * sat"
            }
        ],
        "x": 90,
        "y": 220,
        "wires": [
            [
                "b6fe6889.953ab8",
                "160ecb8f.c4cc84"
            ]
        ]
    },
    {
        "id": "b6fe6889.953ab8",
        "type": "mqtt out",
        "z": "f8865110.44c59",
        "name": "> MQTT",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "b83f640b.f9b038",
        "x": 320,
        "y": 280,
        "wires": []
    },
    {
        "id": "160ecb8f.c4cc84",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "to Bed msg",
        "func": "const ctls = global.get(\"heatPads\"); \nconst name = msg.topic.split('/')[3];\nconst state = ctls[name].state;\n\nmsg.payload = !state.power?     // if bed already on, say differently\n    \"Setting \" + msg.topic.split('/')[3] +\" bed to \" + msg.payload + \" degrees.\"\n    :\n    msg.topic.split('/')[3] +\" bed is already on, and currently at \" + state.tBed + \" degrees.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "bcbc1481.027f48"
            ]
        ]
    },
    {
        "id": "7b9733cb.e6a58c",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "device name prefix",
        "func": "msg.payload = msg.topic.split('/')[3] +\" \"+ msg.topic.split('/')[2]+ \" \"  + msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "94ce8955.861978"
            ]
        ]
    },
    {
        "id": "acc05ed8.b05ff",
        "type": "telegrambot-notify",
        "z": "f8865110.44c59",
        "name": "> Telegram",
        "bot": "4e9db466.47d21c",
        "chatId": "",
        "message": "",
        "parseMode": "",
        "x": 1270,
        "y": 100,
        "wires": []
    },
    {
        "id": "5d62f704.3401c8",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "route telegram",
        "func": "let d = new Date();\nlet m = d.getHours() * 60 + d.getMinutes();\n\nlet Gilad = 551043853, Tali = 522829430, Both = -255724016;\n\nlet id = m < 4*60+30 || m >= 23*60+30 || \n    (d.getDay() >= 5 && m > 15*60 && m < 17*60) ? Gilad :\n    //m < 9*60+30 ? Tali : \n    Both;\n    \nmsg.telegram = {chat: {id}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 100,
        "wires": [
            [
                "acc05ed8.b05ff"
            ]
        ]
    },
    {
        "id": "a5fdf3da.ca767",
        "type": "Unifi",
        "z": "f8865110.44c59",
        "name": "",
        "ip": "home2",
        "port": "9443",
        "site": "default",
        "command": "20",
        "x": 250,
        "y": 720,
        "wires": [
            [
                "d72256c1.618838",
                "876b29de.202cf8"
            ]
        ]
    },
    {
        "id": "82532034.fd3ea",
        "type": "change",
        "z": "5515e8ec.3a0e28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "test",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "654ea35e.9d48fc"
            ]
        ]
    },
    {
        "id": "f72b9e82.e66a7",
        "type": "inject",
        "z": "5515e8ec.3a0e28",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "82532034.fd3ea"
            ]
        ]
    },
    {
        "id": "5d35b47b.6b10ac",
        "type": "npm",
        "z": "5515e8ec.3a0e28",
        "name": "parse Json5",
        "func": "// NPM module exposed as variable, npm_module\nreturn npm_module.parse(msg.payload);",
        "npm_module": "json5",
        "module_style": "custom",
        "msg_payload": "return_val",
        "function_name": "",
        "x": 90,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "654ea35e.9d48fc",
        "type": "googlehome-notify",
        "z": "5515e8ec.3a0e28",
        "server": "4b5b0c00.24def4",
        "name": "",
        "x": 560,
        "y": 280,
        "wires": []
    },
    {
        "id": "feb3f78d.934518",
        "type": "debug",
        "z": "5515e8ec.3a0e28",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 550,
        "y": 600,
        "wires": []
    },
    {
        "id": "4db02244.743f7c",
        "type": "cast-to-client",
        "z": "5515e8ec.3a0e28",
        "name": "Google Home",
        "url": "",
        "contentType": "",
        "message": "",
        "language": "en",
        "ip": "10.20.30.121",
        "port": "",
        "volume": "",
        "x": 360,
        "y": 600,
        "wires": [
            [
                "feb3f78d.934518"
            ]
        ],
        "icon": "node-red-contrib-cast/google-home2.svg"
    },
    {
        "id": "1485dbd.34c0424",
        "type": "inject",
        "z": "5515e8ec.3a0e28",
        "name": "Status",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"status\": true, \"volume\": 50}",
        "payloadType": "json",
        "x": 90,
        "y": 600,
        "wires": [
            [
                "4db02244.743f7c"
            ]
        ]
    },
    {
        "id": "e4030152.12aea",
        "type": "inject",
        "z": "5515e8ec.3a0e28",
        "name": "Status",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 90,
        "y": 660,
        "wires": [
            [
                "4db02244.743f7c"
            ]
        ]
    },
    {
        "id": "a0ad8e8c.2c946",
        "type": "inject",
        "z": "5515e8ec.3a0e28",
        "name": "Status",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"status\": true}",
        "payloadType": "json",
        "x": 90,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c20b8d0d.8835c",
        "type": "function",
        "z": "5515e8ec.3a0e28",
        "name": "JS Parts",
        "func": "// Now + 5 seconds:\nlet d = new Date(); \nd.setSeconds(d.getSeconds() + 5);\nd = d.toTimeString().split(\" \")[0];\n\nreturn [[\n    {ontime: \"22:45:00\", sun: true, mon: true, tue: true, wed: true, thu: true, fri: true},\n    {ontime: d, sat: 0},\n].map(p => ({payload: {...p, onvalue: \"37\", ontopic: \"esp/L3/HeatPad/Parents/state\"}}))];",
        "outputs": 1,
        "noerr": 0,
        "x": 80,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b99b2583.574508",
        "type": "inject",
        "z": "f8865110.44c59",
        "name": "every 15s",
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 720,
        "wires": [
            [
                "a5fdf3da.ca767"
            ]
        ]
    },
    {
        "id": "12ae1190.be59ee",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "check presence",
        "func": "const lastSeenSeconds = 300;\nlet presenceCutoff = new Date() / 1000 - lastSeenSeconds +\n    new Date().getTimezoneOffset() * 60 * 1000;\nconst people = {\n    Gilad: \"04:d6:aa:d5:12:77\",         // Galaxy S8+    \"f4:09:d8:d6:d5:59\",       // Galaxy Note 4\n    Tali: \"4c:74:bf:78:f6:9b\",\n    Inbal: \"76:a8:62:bf:3e:da\",         // Galaxy S20\n    Shahar: \"f4:60:e2:a3:f8:ce\",\n    Yarden: \"1c:cc:d6:42:62:d7\",        // Redmi Note 8 Pro     \"00:ae:fa:e2:36:02\",      // Galaxy S6     \"f4:60:e2:ad:eb:40\",  \"40:31:3c:ac:6d:cd\",\n    Omer: \"12:6c:74:b9:42:a0\",          // Galaxy S20+     \"44:91:60:aa:4b:fd\",\n    Shoham: \"1c:cc:d6:45:39:b9\",    // \"8c:f5:a3:80:2f:cf\",  \"68:3e:34:52:f7:c5\",\n};\n\nlet peopleArr = Object.keys(people);\n\nlet devices = msg.payload[0].filter(dev => \n    (dev.name || dev.hostname || \"\").includes(\"Phone\"));\n\nconst curStat = context.get(\"presence\") || {};\n\nlet bChanged = false;\nObject.entries(people).forEach(([nm, mac]) => {\n//peopleArr.forEach((nm, i) => {\n    //let dev = devices.find(dev => dev.mac === people[nm]) || {};\n    let dev = devices.find(dev => dev.mac === mac) || {};\n    let cur = curStat[nm];\n    if (!cur) curStat[nm] = cur = {};\n    const isHome = dev.last_seen > presenceCutoff;\n    if (isHome !== cur.isHome) {\n        bChanged = true;\n        if (typeof cur.isHome === \"boolean\")\n            cur.tm = Date.now();\n        cur.isHome = isHome;\n    }\n});\n\nif (bChanged) {\n    context.set(\"presence\", curStat);\n}\n\n//let devices = devices.filter(device => device.name === people[topic] && device.last_seen > presenceCutoff);\n//let devices = devices.filter(device => device.name === people[topic]);\nreturn [peopleArr.map((person,idx) => {\n    let dev = devices.find(dev => dev.mac === people[person]) || {};\n    return {\n        topic: person,\n        more:dev,\n        payload: dev.last_seen > presenceCutoff? idx + 1 : 0\n    };\n})];\n",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 1280,
        "wires": [
            [
                "a60a6420.567bc8"
            ]
        ],
        "outputLabels": [
            "joep presence"
        ]
    },
    {
        "id": "6f124888.38edc8",
        "type": "ui_chart",
        "z": "f8865110.44c59",
        "d": true,
        "name": "",
        "group": "7e71b679.598338",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "H:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0.1",
        "ymax": "7",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#9467bd",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 750,
        "y": 1429,
        "wires": [
            []
        ]
    },
    {
        "id": "a60a6420.567bc8",
        "type": "rbe",
        "z": "f8865110.44c59",
        "name": "diff",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 90,
        "y": 1340,
        "wires": [
            [
                "789f1131.e5b0e"
            ]
        ]
    },
    {
        "id": "c2aa934.c11387",
        "type": "collector",
        "z": "f8865110.44c59",
        "name": "",
        "onlyIfChanged": true,
        "x": 420,
        "y": 1340,
        "wires": [
            [
                "a5bb0b38.bf9e28"
            ]
        ]
    },
    {
        "id": "789f1131.e5b0e",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Set columns",
        "func": "msg.payload = {\n    Name: msg.topic, \n    Where: msg.payload? \"home\" : `out`,\n    // decrease 10 minutes of timeout when out:\n    When: new Date(new Date().getTime() - (msg.payload? 0 : 5*60*1000)),\n    //lastSeen: new Date((msg.more.last_seen - (msg.payload? msg.more.duration : 0)) * 1000),\n    //lastSeen2: msg.more.last_seen,\n    //now: (new Date() / 1000 - (new Date().getTimezoneOffset() * 60 * 1000)) >>0\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 250,
        "y": 1340,
        "wires": [
            [
                "c2aa934.c11387"
            ]
        ]
    },
    {
        "id": "6269aa6e.4902b4",
        "type": "ui_table",
        "z": "f8865110.44c59",
        "d": true,
        "group": "7e71b679.598338",
        "name": "טבלת נוכחות",
        "order": 8,
        "width": "0",
        "height": "0",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 770,
        "y": 1380,
        "wires": []
    },
    {
        "id": "a5bb0b38.bf9e28",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "to array, sort",
        "func": "msg.payload = Object.values(msg.payload);\n//if (msg.payload.some(a => typeof a.When !== \"object\")) return null;\nmsg.payload.sort((a,b) => b.When.getTime() - a.When.getTime());\nmsg.payload = msg.payload.map(a => ({...a, When: a.When.toTimeString().split(\" \")[0]}));\n//msg.payload.forEach(a => a.When = a.When.toTimeString().split(\" \")[0]);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 1340,
        "wires": [
            [
                "6269aa6e.4902b4",
                "d2cb9ed1.28f76"
            ]
        ]
    },
    {
        "id": "d72256c1.618838",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Save Device IPs",
        "func": "let googleHome = msg.payload[0].find(dev => dev.mac === \"48:d6:d5:cb:7c:d8\");\nif (googleHome)\n    global.set(\"googleHomeIP\", googleHome.ip)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "f057a6ef.4ecb68",
        "type": "change",
        "z": "f8865110.44c59",
        "name": "set googleHomeState",
        "rules": [
            {
                "t": "set",
                "p": "googleHomeState",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "a3f9817.ab8cd8",
        "type": "openhab2-in",
        "z": "f8865110.44c59",
        "name": "GH Player Status",
        "controller": "d9eb1526.34e608",
        "itemname": "GH_Entryway_Player",
        "x": 660,
        "y": 480,
        "wires": [
            [
                "f057a6ef.4ecb68"
            ],
            []
        ]
    },
    {
        "id": "d2cb9ed1.28f76",
        "type": "ui_template",
        "z": "f8865110.44c59",
        "d": true,
        "group": "7e71b679.598338",
        "name": "Table",
        "order": 6,
        "width": "6",
        "height": "5",
        "format": "<table>\n    <thead>\n        <tr style=\"width:100%\">\n            <td ng-repeat=\"(key,val) in msg.payload[0]\"><b>{{key}}</b></td>\n            <!--<td ng-repeat=\"(key,val) in msg.payload[0] track by key\" ng-if=\"key !== 'Where'\"><b>{{key}}</b></td>-->\n        </tr>\n    </thead>\n    <tbody>\n    <tr ng-repeat=\"row in msg.payload track by row.Name\">\n        <td ng-repeat=\"(key,val) in row\">{{val}}</td>\n        <!--<i class=\"fa fa-sign-in\"></i>-->\n        <!--<td ng-repeat=\"(key,val) in row\" ng-if=\"key !== 'Where'\">{{}} {{val}}<i class=\"fa fa-sign-in\"></i></td>-->\n    </tr>\n    </tbody>\n</table>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 750,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "ba43203e.8ae85",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "=> Open/Close",
        "func": "return [ \n    {payload: msg.payload.door === 1 ? \"Garage door opened\" : \"Garage door closed\"},\n    {payload: msg.payload.door === 1, topic: \"Garage\"}\n];",
        "outputs": 2,
        "noerr": 0,
        "x": 320,
        "y": 400,
        "wires": [
            [
                "df2c6e1c.8d10a"
            ],
            [
                "c3be8d97.29c86",
                "a8eb6403.430aa8"
            ]
        ]
    },
    {
        "id": "df2c6e1c.8d10a",
        "type": "rbe",
        "z": "f8865110.44c59",
        "name": "diff",
        "func": "rbei",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 490,
        "y": 400,
        "wires": [
            [
                "bcbc1481.027f48",
                "2b87c038.412b7"
            ]
        ]
    },
    {
        "id": "dc36467c.2d3048",
        "type": "inject",
        "z": "f8865110.44c59",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Garage door closed",
        "payloadType": "str",
        "x": 300,
        "y": 360,
        "wires": [
            [
                "df2c6e1c.8d10a"
            ]
        ]
    },
    {
        "id": "93603df0.a94c5",
        "type": "inject",
        "z": "f8865110.44c59",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 200,
        "wires": [
            [
                "f0b62ec0.f2f66"
            ]
        ]
    },
    {
        "id": "f0b62ec0.f2f66",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "",
        "func": "msg.payload = \"test\";\n//msg.telegram = {chat: {id: 551043853}};\nmsg.telegram = {chat: {id: 522829430}};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "acc05ed8.b05ff"
            ]
        ]
    },
    {
        "id": "94ce8955.861978",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Rephrase",
        "func": "msg.payload = msg.payload\n    .replace(/sensor malf.*/, \"sensor malfunction\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 160,
        "wires": [
            [
                "bcbc1481.027f48"
            ]
        ]
    },
    {
        "id": "8e81703c.b2d59",
        "type": "function",
        "z": "5515e8ec.3a0e28",
        "name": "flip state",
        "func": "const st = context.state = !context.state;\nreturn st? \n    {...msg, payload: '<i class=\"fa fa-rotate-90 fa-folder-o\"></i> Closed', colour: \"red\"} :\n    {...msg, payload: '<i class=\"fa fa-rotate-90 fa-folder-open-o\"></i> OPEN', colour: \"green\"};\n    ",
        "outputs": 1,
        "noerr": 0,
        "x": 280,
        "y": 80,
        "wires": [
            [
                "1b914207.2116ee"
            ]
        ]
    },
    {
        "id": "1b914207.2116ee",
        "type": "ui_button",
        "z": "5515e8ec.3a0e28",
        "d": true,
        "name": "מצב",
        "group": "b1c9a4fb.9d1828",
        "order": 4,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "{{payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{colour}}",
        "icon": "",
        "payload": "press",
        "payloadType": "str",
        "topic": "",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "8e81703c.b2d59"
            ]
        ]
    },
    {
        "id": "b6ca8247.ff2b6",
        "type": "inject",
        "z": "5515e8ec.3a0e28",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "8e81703c.b2d59"
            ]
        ]
    },
    {
        "id": "f08f6fd.eb1dc9",
        "type": "comment",
        "z": "5515e8ec.3a0e28",
        "name": "button with two states, changing color/text and icon",
        "info": "",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "3ef5bbd9.a1c984",
        "type": "ui_text_input",
        "z": "283de01b.130d1",
        "d": true,
        "name": "",
        "label": "קוד שער",
        "tooltip": "",
        "group": "b1c9a4fb.9d1828",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "esp/L1/Garage/cmd",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "5ce75de1.9fa264"
            ]
        ]
    },
    {
        "id": "5ce75de1.9fa264",
        "type": "function",
        "z": "283de01b.130d1",
        "name": "Code",
        "func": "if (msg.payload !== 4785) return;\nmsg.payload = \"TriggerDoor\";\nreturn [msg, {payload: ''}];",
        "outputs": 2,
        "noerr": 0,
        "x": 392,
        "y": 141,
        "wires": [
            [
                "947ddb13.f8efd8"
            ],
            [
                "3ef5bbd9.a1c984"
            ]
        ]
    },
    {
        "id": "444c2e4d.79a6a",
        "type": "function",
        "z": "283de01b.130d1",
        "name": "prep button",
        "func": "const open = !!msg.payload.door;\n//return {...msg, enabled: open, payload: open? '<i class=\"material-icons\" style=\"color: green\">file_download</i>' : ''} \nreturn {...msg, enabled: open, color: \"#70A0F0\", ui_control: {icon: \"file_download\"}};\n    ",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 100,
        "wires": [
            [
                "d0513d92.2433b"
            ]
        ]
    },
    {
        "id": "d0513d92.2433b",
        "type": "ui_button",
        "z": "283de01b.130d1",
        "d": true,
        "name": "סגור",
        "group": "b1c9a4fb.9d1828",
        "order": 6,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "{{color}}",
        "bgcolor": "transparent",
        "icon": "",
        "payload": "TriggerDoor",
        "payloadType": "str",
        "topic": "esp/L1/Garage/cmd",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "947ddb13.f8efd8"
            ]
        ]
    },
    {
        "id": "c936fcba.8e13b",
        "type": "inject",
        "z": "283de01b.130d1",
        "name": "Init",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "444c2e4d.79a6a"
            ]
        ]
    },
    {
        "id": "d48d9f9c.0016c",
        "type": "mqtt in",
        "z": "283de01b.130d1",
        "name": "Garage state",
        "topic": "esp/L1/Garage/state",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "444c2e4d.79a6a",
                "8fc7654b.17e248"
            ]
        ]
    },
    {
        "id": "947ddb13.f8efd8",
        "type": "mqtt out",
        "z": "283de01b.130d1",
        "name": "> MQTT",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "b83f640b.f9b038",
        "x": 785,
        "y": 138,
        "wires": []
    },
    {
        "id": "b81d3efa.b9009",
        "type": "ui_chart",
        "z": "283de01b.130d1",
        "name": "",
        "group": "e875ebf7.52ed48",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "15",
        "ymax": "45",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#aec7e8",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#1f77b4",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "outputs": 1,
        "x": 530,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f6cf4597.822368",
        "type": "mqtt in",
        "z": "283de01b.130d1",
        "name": "",
        "topic": "esp/L3/HeatPad/+/state",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "5dfce2fa.b4627c",
                "6f3277e3.aa9f28"
            ]
        ]
    },
    {
        "id": "e0e10d5c.85c1b",
        "type": "function",
        "z": "283de01b.130d1",
        "name": "tBed",
        "func": "msg.measurement = msg.topic.replace(/\\//g, \".\");\nmsg.topic = {\n    Parents: \"הורים\",\n    Shahar: \"שחר\"\n}[msg.topic.split('/')[3]];\nif (msg.payload.power) msg.topic += \" ON\"\nmsg.payload = msg.payload.tBed;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 420,
        "wires": [
            [
                "b81d3efa.b9009",
                "affeb373.f1e27"
            ]
        ]
    },
    {
        "id": "affeb373.f1e27",
        "type": "influxdb out",
        "z": "283de01b.130d1",
        "d": true,
        "influxdb": "556e67a9.8953b8",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "x": 520,
        "y": 480,
        "wires": []
    },
    {
        "id": "5dfce2fa.b4627c",
        "type": "msg-resend",
        "z": "283de01b.130d1",
        "interval": "10",
        "intervalUnit": "mins",
        "maximum": "0",
        "bytopic": true,
        "clone": true,
        "firstDelayed": false,
        "addCounters": false,
        "highRate": true,
        "outputCountField": "",
        "outputMaxField": "",
        "name": "Repeat 10min",
        "x": 180,
        "y": 420,
        "wires": [
            [
                "e0e10d5c.85c1b"
            ]
        ]
    },
    {
        "id": "b821a656.834c38",
        "type": "mqtt in",
        "z": "3e6b6884.b00d58",
        "name": "",
        "topic": "esp/L3/Boiler/temp",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "baef96f9.cafd38"
            ]
        ]
    },
    {
        "id": "aabe2a94.417998",
        "type": "ui_text",
        "z": "3e6b6884.b00d58",
        "group": "26ad0dca.e7b0d2",
        "order": 5,
        "width": "1",
        "height": "1",
        "name": "Top",
        "label": "<font size=2>TOP</font>",
        "format": "<span><font color={{msg.color}}>{{msg.payload}}&deg;</font><div class=\"sub-label\">{{msg.topHour}}</div></span>",
        "layout": "col-center",
        "x": 470,
        "y": 260,
        "wires": []
    },
    {
        "id": "baef96f9.cafd38",
        "type": "function",
        "z": "3e6b6884.b00d58",
        "name": "Temps",
        "func": "const tc = {20: '#ebe6e6', 30: '#92c9f0', 35: '#f7bec8', 43: '#fc8196', 100: '#ff2e52'};\nreturn [\"Top\", \"Center\", \"Bottom\", \"Output\"].map(key => ({\n    label: key,\n    payload: msg.payload[\"t\"+key],\n    color: tc[Object.keys(tc).find(t => t > msg.payload[\"t\"+key])],\n    topHour: (msg.payload.topHour>0? \"+\" : \"\")+ msg.payload.topHour + \"&deg;\"\n}));",
        "outputs": 4,
        "noerr": 0,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "aabe2a94.417998"
            ],
            [
                "fb51467a.c4c858"
            ],
            [
                "fb4f9135.c4fe3"
            ],
            [
                "efbbf03e.1a2be"
            ]
        ]
    },
    {
        "id": "fb51467a.c4c858",
        "type": "ui_text",
        "z": "3e6b6884.b00d58",
        "group": "26ad0dca.e7b0d2",
        "order": 6,
        "width": "1",
        "height": "1",
        "name": "Center",
        "label": "<font size=2>center</font>",
        "format": "<font color={{msg.color}}>{{msg.payload}}&deg;</font>",
        "layout": "col-center",
        "x": 610,
        "y": 260,
        "wires": []
    },
    {
        "id": "fb4f9135.c4fe3",
        "type": "ui_text",
        "z": "3e6b6884.b00d58",
        "group": "26ad0dca.e7b0d2",
        "order": 7,
        "width": "1",
        "height": "1",
        "name": "Bottom",
        "label": "<font size=2>bottom</font>",
        "format": "<font color={{msg.color}}>{{msg.payload}}&deg;</font>",
        "layout": "col-center",
        "x": 480,
        "y": 300,
        "wires": []
    },
    {
        "id": "efbbf03e.1a2be",
        "type": "ui_text",
        "z": "3e6b6884.b00d58",
        "group": "26ad0dca.e7b0d2",
        "order": 8,
        "width": "1",
        "height": "1",
        "name": "Output",
        "label": "<font size=2>output</font>",
        "format": "<font color={{msg.color}}>{{msg.payload}}&deg;</font>",
        "layout": "col-center",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "4c570a17.b5fe94",
        "type": "ui_text",
        "z": "3e6b6884.b00d58",
        "d": true,
        "group": "26ad0dca.e7b0d2",
        "order": 4,
        "width": "2",
        "height": "1",
        "name": "State",
        "label": "בוילר",
        "format": "<font size=4>{{msg.payload}}</font>",
        "layout": "col-center",
        "x": 490,
        "y": 140,
        "wires": []
    },
    {
        "id": "b03dcb86.7f5d78",
        "type": "ui_text",
        "z": "3e6b6884.b00d58",
        "group": "26ad0dca.e7b0d2",
        "order": 2,
        "width": "3",
        "height": "1",
        "name": "Outlook",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "x": 500,
        "y": 180,
        "wires": []
    },
    {
        "id": "ed8df6fc.46f368",
        "type": "mqtt in",
        "z": "3e6b6884.b00d58",
        "name": "",
        "topic": "esp/L3/Boiler/info",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "d4a31630.e4a248"
            ]
        ]
    },
    {
        "id": "d4a31630.e4a248",
        "type": "ui_text",
        "z": "3e6b6884.b00d58",
        "group": "26ad0dca.e7b0d2",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "Title Wifi",
        "label": "<span class=\"nr-dashboard-cardpanel\"><p class=\"nr-dashboard-cardtitle\">דוד</p></span>",
        "format": "<font class=\"fa fa-wifi fa-xs\" color={{msg.payload.rssiPct? \"#FFF\" : \"#F88\"}}/> {{msg.payload.rssiPct}}%",
        "layout": "row-spread",
        "x": 500,
        "y": 40,
        "wires": []
    },
    {
        "id": "4172f5d9.0a300c",
        "type": "mqtt in",
        "z": "3e6b6884.b00d58",
        "name": "",
        "topic": "esp/L3/Boiler/LWT",
        "qos": "2",
        "datatype": "utf8",
        "broker": "b83f640b.f9b038",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "d4a31630.e4a248"
            ]
        ]
    },
    {
        "id": "90b9fe9a.ff448",
        "type": "ui_template",
        "z": "283de01b.130d1",
        "group": "e21dc06f.7833",
        "name": "HP Delay",
        "order": 3,
        "width": "2",
        "height": "1",
        "format": "<div class=\"button-row\">\n<md-button \n    ng-repeat=\"(nm,ctl) in msg.ctls track by nm\"\n    class=\"myctl vibrate touched\"\n    ng-click=\"send(ctl)\">\n    <div style=\"height:40%\">in 30m</div>\n    <font ng-if=\"!ctl.inTm\"\n        class=\"fa fa-clock-o fa-lg\" color=grey />\n    <font ng-if=\"ctl.inTm\" \n        size=2 color={{ctl.state.sOff?\"#F44\":\"#4F4\"}}>{{ctl.inTm}}</font>\n</md-button>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 360,
        "y": 340,
        "wires": [
            [
                "6b52ba83.271334"
            ]
        ]
    },
    {
        "id": "6f3277e3.aa9f28",
        "type": "function",
        "z": "283de01b.130d1",
        "name": "prep",
        "func": "msg.ctls = global.get(\"heatPads\");\nlet rDelay = null;\n\nif (!msg.ctls) {\n    msg.ctls = {\n        Parents: {title: \"הורים\"},\n        Shahar: {title: \"שחר\"}\n    };\n\n    Object.entries(msg.ctls).forEach(([nm, ctl]) => Object.assign(ctl, {\n        name: nm,\n        topic: `esp/L3/HeatPad/${nm}/`,\n        state: {},\n        inTm: \"\"\n    }));\n}\n\nif (msg.topic) {\n    const name = msg.topic.split('/')[3];\n    const ctl = msg.ctls[name];\n    if (typeof msg.payload === \"object\")     // otherwise redraw msg\n        ctl.state = msg.payload;\n    let ms = ctl.msOn;\n    if (ms && ctl.state.power) {\n        ctl.msOn = 0;\n        rDelay = {resend_ignore: true, topic: ctl.topic + \"cmd\"};\n    }\n    if (ctl.state.sOff)\n        ms = Date.now() + ctl.state.sOff * 1000;\n    ctl.inTm = ms? (new Date(ms)).toTimeString().replace(/(:[^:]*$)/, \"\") : \"\";\n}\nglobal.set(\"heatPads\", msg.ctls);\nreturn [msg, rDelay];",
        "outputs": 2,
        "noerr": 0,
        "x": 330,
        "y": 240,
        "wires": [
            [
                "90b9fe9a.ff448",
                "2fce189b.34e038"
            ],
            [
                "6c9560f5.32e25"
            ]
        ]
    },
    {
        "id": "6b52ba83.271334",
        "type": "function",
        "z": "283de01b.130d1",
        "name": "Actions",
        "func": "const delay = 30 * 60;\nconst ctls = global.get(\"heatPads\"), ctl = ctls[msg.name];\n\nlet rMqtt, rDelay, rDraw;\nif (ctl.state.power) {  // cmd MQTT to delay off\n    // send new off time to MQTT\n    rMqtt = {topic: msg.topic +\"setsoff\", payload: delay};\n    ctl.msOn = 0;\n} else if (!ctl.msOn) { // delayed ON\n    // delay send ON\n    //rDelay = {delay: delay*1000, topic: msg.topic + \"cmd\", payload: \"ON\"};\n    rDelay = {resend_interval: delay, topic: msg.topic + \"cmd\", payload: \"ON\"};\n    ctl.msOn = Date.now() + delay*1000;\n    // circle back to inTm\n    rDraw = {topic: msg.topic};\n} else {                // cancel delayed ON\n    ctl.msOn = 0;\n    //rDelay = {reset: true};\n    rDelay = {resend_ignore: true, topic: msg.topic + \"cmd\"};\n    rDraw = {topic: msg.topic};\n}\nglobal.set(\"heatPads\", ctls);\n\nreturn [rMqtt || null, rDelay || null, rDraw || null];",
        "outputs": 3,
        "noerr": 0,
        "x": 520,
        "y": 340,
        "wires": [
            [
                "947ddb13.f8efd8"
            ],
            [
                "6c9560f5.32e25"
            ],
            [
                "6f3277e3.aa9f28"
            ]
        ]
    },
    {
        "id": "af69b56a.cfe928",
        "type": "inject",
        "z": "283de01b.130d1",
        "name": "init",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "6f3277e3.aa9f28"
            ]
        ]
    },
    {
        "id": "6c9560f5.32e25",
        "type": "msg-resend",
        "z": "283de01b.130d1",
        "interval": 5,
        "intervalUnit": "secs",
        "maximum": "1",
        "bytopic": true,
        "clone": false,
        "firstDelayed": true,
        "addCounters": false,
        "highRate": true,
        "outputCountField": "",
        "outputMaxField": "",
        "name": "Delay",
        "x": 530,
        "y": 280,
        "wires": [
            [
                "947ddb13.f8efd8"
            ]
        ]
    },
    {
        "id": "2fce189b.34e038",
        "type": "ui_template",
        "z": "283de01b.130d1",
        "group": "e21dc06f.7833",
        "name": "HeatPads",
        "order": 1,
        "width": "2",
        "height": "1",
        "format": "<div class=\"button-row\">\n<md-button \n    ng-repeat=\"(nm,ctl) in msg.ctls track by nm\"\n    class=\"myctl vibrate touched\"\n    ng-click=\"send({topic: ctl.topic + 'cmd', payload: ctl.state.power? 'OFF' : 'ON'})\">\n    <div>{{ctl.title}}</div>\n    <font ng-if=\"!ctl.state.power\" \n        class=\"fa fa-bed fa-2x\" color=grey />\n    <font ng-if=\"ctl.state.power\" \n        size=3 color=#F44 >{{ctl.state.tBed}}&deg;</font>\n</md-button>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "947ddb13.f8efd8"
            ]
        ]
    },
    {
        "id": "f981b89d.535328",
        "type": "ui_ui_control",
        "z": "283de01b.130d1",
        "name": "",
        "events": "change",
        "x": 335,
        "y": 482,
        "wires": [
            []
        ]
    },
    {
        "id": "f0d21bc.0fe48e8",
        "type": "ui_template",
        "z": "283de01b.130d1",
        "group": "e21dc06f.7833",
        "name": "Show HeatPads",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "<md-button \n    class=\"myctl vibrate touched\"\n    ng-click=\"send({payload: 'Graph_HeatPads'})\">\n    <div>חימום</div>\n    <font class=\"fa fa-area-chart fa-2x\" color=#86F></font>\n</md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 135,
        "y": 482,
        "wires": [
            [
                "f981b89d.535328"
            ]
        ]
    },
    {
        "id": "f6a8cc00.51b3f",
        "type": "ui_template",
        "z": "283de01b.130d1",
        "group": "e875ebf7.52ed48",
        "name": "Hide HeatPads",
        "order": 1,
        "width": "1",
        "height": "1",
        "format": "<md-button \n    class=\"myctl vibrate touched\"\n    ng-click=\"send({payload: 'מכשירים'})\">\n    <div>back</div>\n    <font class=\"fa fa-arrow-left fa-2x\" color=#EEE/>\n</md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 135,
        "y": 522,
        "wires": [
            [
                "f981b89d.535328"
            ]
        ]
    },
    {
        "id": "12d90975.7eff07",
        "type": "mqtt in",
        "z": "38ee4b91.5dc3e4",
        "name": "",
        "topic": "+/+/LWT",
        "qos": "0",
        "datatype": "auto",
        "broker": "b83f640b.f9b038",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "6ac0317e.d56d3"
            ]
        ]
    },
    {
        "id": "6ac0317e.d56d3",
        "type": "function",
        "z": "38ee4b91.5dc3e4",
        "d": true,
        "name": "GetStat",
        "func": "msg.topic = msg.topic.substring(0, msg.topic.lastIndexOf(\"/\")) + \"/getstat\";\nmsg.payload = \"get\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 60,
        "wires": [
            [
                "1b478f5e.6a0b91"
            ]
        ]
    },
    {
        "id": "a21b3fb4.625c1",
        "type": "mqtt in",
        "z": "38ee4b91.5dc3e4",
        "name": "",
        "topic": "+/+/+/LWT",
        "qos": "0",
        "datatype": "auto",
        "broker": "b83f640b.f9b038",
        "x": 101,
        "y": 110,
        "wires": [
            [
                "6ac0317e.d56d3"
            ]
        ]
    },
    {
        "id": "179e43bf.72b41c",
        "type": "mqtt in",
        "z": "38ee4b91.5dc3e4",
        "name": "",
        "topic": "+/+/+/+/LWT",
        "qos": "0",
        "datatype": "auto",
        "broker": "b83f640b.f9b038",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "6ac0317e.d56d3"
            ]
        ]
    },
    {
        "id": "1b478f5e.6a0b91",
        "type": "mqtt out",
        "z": "38ee4b91.5dc3e4",
        "name": "> MQTT",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "b83f640b.f9b038",
        "x": 480,
        "y": 60,
        "wires": []
    },
    {
        "id": "ca29998e.167c68",
        "type": "function",
        "z": "38ee4b91.5dc3e4",
        "d": true,
        "name": "GetStat",
        "func": "if (msg.payload !== \"Connection Lost\") return;\nmsg.topic = msg.topic.substring(0, msg.topic.lastIndexOf(\"/\"));\nmsg.payload = \"event,getstat\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 220,
        "wires": [
            [
                "1b478f5e.6a0b91"
            ]
        ]
    },
    {
        "id": "931d6285.531c4",
        "type": "mqtt in",
        "z": "38ee4b91.5dc3e4",
        "name": "",
        "topic": "/+/control/cmd/LWT",
        "qos": "0",
        "datatype": "utf8",
        "broker": "b83f640b.f9b038",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "ca29998e.167c68"
            ]
        ]
    },
    {
        "id": "b51ad9d8.a701f8",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "group": "b1c9a4fb.9d1828",
        "name": "Dashboard styles",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<script src=\"/js/iro.min.js\"></script>\n\n<style>\n  .md-text {\n    font-size: 13px;\n  }\n  md-option {\n      height: 25px;\n  }\n  .nr-dashboard-slider p.label {\n      margin: 0;\n  }\n  .nr-dashboard-cardpanel > p {\n      margin: 0;\n      text-align: center;\n  }\n\n  .button-row, .button-col {\n    display: flex;\n    width: calc(100% - 2px);\n    height: calc(100% - 2px);\n    border: 1px solid gray;\n    border-radius: 8px;\n  }\n\n  .button-row {\n    flex-direction: row;\n  }\n  .button-col {\n    flex-direction: column;\n  }\n    \n  .button-row > .myctl:not(:last-child) {\n     margin-right: 6px;\n  }\n  .button-col > .myctl:not(:last-child) {\n     margin-bottom: 6px;\n  }\n\n  .mysubctl,\n  .myctl {\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    padding: 0;\n    margin: 0;     \n    font-size: 12px;\n    min-width: 0;\n    min-height: 0;\n    line-height: unset;\n    text-transform: unset; \n    vertical-align: middle;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n  }\n  .myctl {\n    width: 100%;\n    height: 100%;\n    border-radius: 8px;\n  }\n  .mysubctl {\n    border-radius: 4px;\n    border: 0.5px solid;\n  }\n  .myctl > div > .md-button,\n  .md-button.myctl {\n    background-color: #225;\n  }\n  .myctl > * {\n      z-index: 5;\n  }\n  button.myctl {\n    background-color: #225;\n    color: #FFF;\n    border: 0;\n  }\n  .myctl.dialog-button {\n    background-color: #229;\n  }\n  .flex30 {\n      flex: 0 1 30%;\n  }\n\n  .bigger > div {\n      font-size: 110%;\n  }\n  \n  .sub-label {\n      position: absolute;\n      font-size: 9pt;\n      padding-left: 3px;\n      z-index: 1;\n  }\n  \n    .left-icon {\n        flex: 1;\n        display: flex;\n        width: 100% !important;\n        align-items: center;\n        justify-content: flex-start;\n        align-content: space-between;\n    }\n    .left-icon > *:first-child {\n        //align-items: flex-end;\n        width: 35%;\n        min-width: fit-content;;\n        left: 0;\n    }\n    .left-icon > *:not(:first-child) {\n        //width: 31px;\n        flex: 1;\n    }\n  \n  .myctl ng-md-icon {\n      width: unset;\n      height: unset;\n  }\n  \n  \n  \n.popup .myctl.md-button {\n    width: 42px;\n    height: 42px;\n    margin: 3px;\n}\n\n.myctl.md-button > .flex {\n    display: inline-flex; \n    align-items: center;\n}\n\n.popup md-input-container {\n    flex: 1 0;\n    min-width: 90px;\n    padding: 3px;\n    margin-top: 0;\n}\n.popup md-input-container button {\n    position: absolute;\n    right: 0;\n    background-color: transparent;\n    border: 0;\n    color: red;\n    font-size: 1.5rem;\n}\n\n.popup md-select, \n.popup md-select .md-select-icon {\n    color: white !important;\n}\n\n.popup input {\n    background-color: #333;\n    color: white;\n}\n\n.dialog-body > input {\n    width: calc(100% - 16px);\n    margin: 3px;\n    padding: 1px 3px;\n    font-size: 1.2rem;\n}\n\n.myctl.ctl-lwt {\n    opacity: 0.8;\n    color: red;\n}\n\n\n.myctl.slider {\n    display: grid;\n    grid-template-columns: 85% 25px;\n    margin: 3px;\n    background-color: #225;\n    width: 84px;\n    height: 42px;\n}\n\n.slider md-slider {\n    height: 42px;\n    min-width: unset;\n    margin-left: 20px;\n}\n.slider md-slider-wrapper {\n    width: unset;\n    height: unset;\n}\n\n.slider md-slider .md-thumb:after, .slider md-slider .md-track,\n.slider md-slider .md-focus-thumb, .slider md-slider .md-focus-ring{\n    background-color: #FA9900 !important;\n    border-color: #FA9900 !important;\n}\n\n.slider .md-thumb {\n    left: -20px;\n}\n\n.slider > div {\n  color: white; \n}\n\n\n/* Add Animation */\n@-webkit-keyframes animatetop {\n    from {opacity:0} \n    to {opacity:1}\n}\n\n@keyframes animatetop {\n    from {opacity:0}\n    to {opacity:1}\n}\n\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 20; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    transform: translate3d(0,0,0);\n    //-webkit-perspective: 1000;\n}\n\n/* dialog Content */\n.dialog-content {\n    position: relative;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    top: 100px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\n\n.dialog-body {\n    padding: 6px;\n}\n\n.popup .dialog-content {\n    background-color: #333333;\n    border: 1px solid #999;\n    border-radius: 3px;\n}\n\n.popup .dialog-body {\n    padding: 0;\n}\n\n/* Dialog Header */\n.dialog-header {\n  padding: 2px 16px;\n  background-color: #03A9F4; /*#5cb85c green;*/\n  border-radius: 10px 10px 0 0;\n  color: white;\n}\n\n/* The Close Button */\n.dialog-close {\n    color: #FFF;\n    text-decoration: none;\n    cursor: pointer;\n    float: right;\n    font-size: 24px;\n    line-height: 0.8;\n    font-weight: bold;\n}\n\n.dialog-close:hover,\n.dialog-close:focus {\n    color: #1565C0;\n}\n\n/* Buttons style */\n.pin {\n    width: 42px;\n    height: 42px;\n    min-width: 0;\n    font-weight: bold;\n    margin: 3px;\n    padding: 0;\n    box-shadow: 4px 4px 6px 0 #dadada;\n    background-color: #29B6F6;\n    color: #fff;\n    touch-action: manipulation;\n}\n\n.pin:not([disabled]):hover {\n    background-color: #03A9F4;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 130,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "98e33d7e.3046d",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "group": "7e71b679.598338",
        "name": "General: jQuery actions",
        "order": 9,
        "width": "0",
        "height": "0",
        "format": "<script>\n//$('.nr-dashboard-cardtitle').css(\"width\", \"unset\");\n$('.nr-dashboard-cardtitle').css(\"padding-left\", \"6px\");\n\n$('.vibrate').on('click', () => navigator.vibrate(5));\n\nfunction restore_bg(x) {\n    $(this).css(\"background-color\", x);\n    $(this).blur();\n};\n\n$('.touched').on('mousedown', function(e) {\n    //var x = $(this).css(\"background-color\");\n    //$(this).css(\"background-color\", \"yellow\");\n    //setTimeout(restore_bg.bind(this, x), 100);\n    //navigator.vibrate(5);\n});\n$('.touched').mouseup(function() { this.blur() });\n//$('.touched').on(\"mouseup\", function() { this.blur() });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 150,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "33902e24.5024c2",
        "type": "ui_template",
        "z": "d4b1bd47.24b07",
        "group": "2bee767.051258a",
        "name": "LR Lights",
        "order": 1,
        "width": "3",
        "height": "1",
        "format": "<div class=\"button-row\">\n<md-button \n    ng-repeat=\"(nm,ctl) in msg.ctls track by nm\"\n    class=\"myctl vibrate touched\"\n    ng-click=\"send({topic: ctl.topic, payload: 'InputSwitchState '+ $index +','+(1-ctl.power)}); send({topic: ctl.topic, payload: 'Event,button'+($index+1)+'#switch'})\">\n    <div>{{ctl.title}}</div>\n    <font class=\"fa fa-lightbulb-o fa-2x\" color={{ctl.power?'#FF4':'grey'}} />\n</md-button>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 440,
        "y": 540,
        "wires": [
            [
                "6e07aa94.3a4bc4"
            ]
        ]
    },
    {
        "id": "ef2dec1c.1f8ca",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "prep",
        "func": "msg.ctls = global.get(\"LR_Lights\");\n\nif (!msg.ctls) {\n    msg.ctls = {\n        sw1: {title: \"אור 2\"},\n        sw2: {title: \"אור 3\"},\n        sw3: {title: \"אור 4\"},\n    };\n\n    Object.entries(msg.ctls).forEach(([nm, ctl]) => Object.assign(ctl, {\n        name: nm,\n        topic: `/esp_L2_LR/control/cmd`,\n    }));\n}\n\nconst name = msg.topic && msg.topic.split(\"/\").splice(-1)[0];\nconst ctl = msg.ctls[name];\nif (ctl) {\n    ctl.power = +msg.payload;\n}\nglobal.set(\"LR_Lights\", msg.ctls);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 540,
        "wires": [
            [
                "33902e24.5024c2"
            ]
        ]
    },
    {
        "id": "fa96804c.5bc1a",
        "type": "inject",
        "z": "d4b1bd47.24b07",
        "name": "init",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 500,
        "wires": [
            [
                "ef2dec1c.1f8ca"
            ]
        ]
    },
    {
        "id": "beb96091.844b",
        "type": "mqtt in",
        "z": "d4b1bd47.24b07",
        "name": "",
        "topic": "/esp_L2_LR/+",
        "qos": "2",
        "datatype": "utf8",
        "broker": "b83f640b.f9b038",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "ef2dec1c.1f8ca"
            ]
        ]
    },
    {
        "id": "7c46f543.cc764c",
        "type": "ui_toast",
        "z": "d4b1bd47.24b07",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 130,
        "y": 800,
        "wires": []
    },
    {
        "id": "26f72ea7.cb4f22",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "d": true,
        "group": "2bee767.051258a",
        "name": "Popup",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\nbody {font-family: Arial, Helvetica, sans-serif;}\n\n/* The Modal (background) */\n.modal {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    opacity:0.99;\n    z-index: 100; /* Sit on top */\n    padding-top: 100px; /* Location of the box */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n}\n\n/* Modal Content */\n.modal-content {\n    position: relative;\n    background-color: #fefefe;\n    margin: auto;\n    padding: 0;\n    border: 1px solid #888;\n    width: 50%;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    -webkit-animation-duration: 0.4s;\n    animation-name: animatetop;\n    animation-duration: 0.4s\n}\n\n/* Add Animation */\n@-webkit-keyframes animatetop {\n    from {top:-300px; opacity:0} \n    to {top:0; opacity:1}\n}\n\n@keyframes animatetop {\n    from {top:-300px; opacity:0}\n    to {top:0; opacity:1}\n}\n\n/* The Close Button */\n.close {\n    color: white;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: #000;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.modal-header {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n\n.modal-body {padding: 2px 16px;}\n\n.modal-footer {\n    padding: 2px 16px;\n    background-color: #5cb85c;\n    color: white;\n}\n</style>\n\n<!-- Trigger/Open The Modal -->\n<button class=\"modal-button\" href=\"{{'#myModal_'+$id}}\">Bedienung</button>\n\n<!-- The Modal -->\n<div id=\"{{'myModal_'+$id}}\" class=\"modal\">\n\n  <!-- Modal content -->\n  <div class=\"modal-content\">\n    <div class=\"modal-header\">\n      <span class=\"close\">&times;</span>\n      <h2>Modal Header</h2>\n    </div>\n    <div class=\"modal-body\">\n      <p>Some text in the Modal Body</p>\n      <div>\n        Qty of silly hats\n  <input type=\"number\" ng-model=\"msg.payload\" name=\"quantity\" min=\"0\" max=\"1000\">\n  <md-button ng-click=\"send(msg)\">Click to send to Node-Red</md-button>\n</div>\n    </div>\n    <div class=\"modal-footer\">\n      <h3>Modal Footer</h3>\n    </div>\n  </div>\n\n</div>\n\n<script>\n// Get the button that opens the modal\nvar btn = document.querySelectorAll(\"button.modal-button\");\n\n// All page modals\nvar modals = document.querySelectorAll('.modal');\n\n// Get the <span> element that closes the modal\nvar spans = document.getElementsByClassName(\"close\");\n\n// When the user clicks the button, open the modal\nfor (var i = 0; i < btn.length; i++) {\n btn[i].onclick = function(e) {\n    e.preventDefault();\n    modal = document.querySelector(e.target.getAttribute(\"href\"));\n    modal.style.display = \"block\";\n }\n}\n\n// When the user clicks on <span> (x), close the modal\nfor (var i = 0; i < spans.length; i++) {\n spans[i].onclick = function() {\n    for (var index in modals) {\n      if (typeof modals[index].style !== 'undefined') modals[index].style.display = \"none\";    \n    }\n }\n}\n\n// When the user clicks anywhere outside of the modal, close it\nwindow.onclick = function(event) {\n    if (event.target.classList.contains('modal')) {\n     for (var index in modals) {\n      if (typeof modals[index].style !== 'undefined') modals[index].style.display = \"none\";    \n     }\n    }\n}\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 270,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "6955edc3.dedb34",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "group": "4e465e1b.3d43e",
        "name": "MQTT Log",
        "order": 2,
        "width": "",
        "height": "",
        "format": "<div  style=\"height:500px;overflow:auto\">\n  <div \n    ng-repeat=\"line in msg.payload track by $index\" \n    style=\"margin-bottom: 1em; white-space: nowrap\">{{line}}</div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 490,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "1cdbe76d.0965b9",
        "type": "function",
        "z": "38ee4b91.5dc3e4",
        "name": "Accumulate",
        "func": "const lines = context.get('mqttLog') || [];\n\nif (msg.topic === \"esp/L3/Boiler/temp\") {\n    const idx = lines.findIndex(l => l.startsWith(\"esp/L3/Boiler/temp\"));\n    if (idx > -1)\n        lines.splice(idx, 1);\n}\n\nlines.unshift(msg.topic +\": \"+ msg.payload);\nif (lines.length > 200)\n    lines.pop();\n\ncontext.set('mqttLog', msg.payload = lines);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 800,
        "wires": [
            [
                "6955edc3.dedb34"
            ]
        ]
    },
    {
        "id": "d4b0ff38.3c0ad",
        "type": "mqtt in",
        "z": "38ee4b91.5dc3e4",
        "name": "ALL MQTT",
        "topic": "#",
        "qos": "0",
        "datatype": "utf8",
        "broker": "b83f640b.f9b038",
        "x": 100,
        "y": 800,
        "wires": [
            [
                "1cdbe76d.0965b9"
            ]
        ]
    },
    {
        "id": "348768ad.724058",
        "type": "ui_button",
        "z": "38ee4b91.5dc3e4",
        "d": true,
        "name": "",
        "group": "2bee767.051258a",
        "order": 3,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "Unlock_door",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "lock",
        "payload": "true",
        "payloadType": "bool",
        "topic": "show",
        "x": 110,
        "y": 940,
        "wires": [
            [
                "7f80ebb8.21fa64"
            ]
        ]
    },
    {
        "id": "7f80ebb8.21fa64",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "d": true,
        "group": "7cdedc06.5fd6d4",
        "name": "Pin_Unlock",
        "order": 3,
        "width": "0",
        "height": "0",
        "format": "<div ng-init=\"init()\" id=\"pin_insert\" class=\"dialog\">\n    \n    <div class=\"dialog_content\">\n        \n        <div class=\"dialog_header\">\n            <span ng-click=\"closeDialog()\" class=\"close\">&times;</span>\n            <h2 style=\"margin:10px\">Insert PIN</h2>\n        </div>\n        \n        <div class=\"dialog_body\">\n\n           <div layout=\"row\" layout-align=\"center\">\n                <div class=\"number_placeholder\">\n                    {{passcode.substring(0, 1)}}\n                </div>\n                <div class=\"number_placeholder\">\n                    {{passcode.substring(1, 2)}}\n                </div>\n                <div class=\"number_placeholder\">\n                    {{passcode.substring(2, 3)}}\n                </div>\n                <div class=\"number_placeholder\">\n                    {{passcode.substring(3, 4)}}\n                </div>\n            </div>\n            \n            <div layout=\"column\" layout-align=\"center\" style=\"margin-top: 10px\">\n                <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(1)\">1</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(2)\">2</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(3)\">3</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(4)\">4</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(5)\">5</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(6)\">6</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(7)\">7</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(8)\">8</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(9)\">9</md-button>\n                    </div>\n                </div>\n                 <div layout=\"row\" layout-align=\"center\">\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"confirm()\">\n                            <ng-md-icon icon=\"done\" style=\"color:#fff;\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"add(0)\">0</md-button>\n                    </div>\n                    <div class=\"number_box\">\n                        <md-button class=\"pin\" ng-click=\"delete()\">\n                            <ng-md-icon icon=\"arrow_back\" style=\"color:#fff;\"></ng-md-icon>\n                        </md-button>\n                    </div>\n                </div>\n            </div> \n          \n        </div> <!--dialog_body-->\n    </div> <!--dialog_content-->\n</div>  <!--dialog-->\n\n\n<style>\n\n/* The Dialog (background) */\n.dialog {\n    display: none; /* Hidden by default */\n    position: fixed; /* Stay in place */\n    z-index: 9999; /* Sit on top */\n    left: 0;\n    top: 0;\n    width: 100%; /* Full width */\n    height: 100%; /* Full height */\n    overflow: auto; /* Enable scroll if needed */\n    background-color: rgb(0,0,0); /* Fallback color */\n    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n    -webkit-transform: translateZ(0px);\n    -webkit-transform: translate3d(0,0,0);\n    -webkit-perspective: 1000;\n}\n\n.dialog_content {\n    position: absolute;\n    background-color: #fff;\n    left: calc(50% - 170px);\n    top: 30px;\n    border-radius: 10px;\n    padding: 0;\n    width: 340px;\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    -webkit-animation-name: animatetop;\n    animation-name: animatetop;\n    animation-duration: 0.4s;\n}\n\n/* Media query for smartphones (to Fix?) */\n@media only screen and (min-device-width : 375px) and (max-device-width : 667px) { \n    .dialog_content {\n    margin-top: 5%;\n    margin-left: 5%;\n}\n}\n\n/* Add Animation */\n@-webkit-keyframes animatetop {\n    from {top: -300px; opacity: 0} \n    to {top: 0; opacity: 1}\n}\n\n@keyframes animatetop {\n    from {top: -300px; opacity: 0}\n    to {top: 0; opacity: 1}\n}\n\n/* Dialog Header */\n.dialog_header {\n    padding: 2px 16px;\n    background-color: #03A9F4;\n    border-radius: 10px 10px 0 0;\n    color: white;\n}\n\n/* Dialog Body */\n.dialog_body {padding: 5px;}\n\n/* The Close Button */\n.close {\n    color: #fff;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.close:hover,\n.close:focus {\n    color: #1565C0;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n/* __ */\n.number_placeholder{\n    width: 50px;\n    height: 34px;\n    margin: 10px;\n    font-size: 20pt;\n    text-align: center;\n    border-bottom: 1px solid black;\n}\n\n/* Number container */\n.number_box{\n    margin: 5px;\n}\n\n/* Buttons style */\n.pin {\n    min-height: 50px;\n    min-width: 50px;\n    font-weight: bold;\n    margin: 0px 10px 10px 0px;\n    box-shadow: 4px 4px 6px 0 #dadada;\n    background-color: #29B6F6;\n    color: #fff;\n}\n\n.pin:not([disabled]):hover {\n    background-color: #03A9F4;\n}\n\n.btn1 {\n  color : rgb(49, 46, 46);\n  background-color: rgba(255, 222, 121, 0.96);\n  border-radius: 10px 0 0 10px;\n  font-size: 16px;\n}\n\n.btn1:not([disabled]):hover {\n  background-color: rgba(107, 103, 91, 0.96);\n  color: white;\n}\n\n.btn1[disabled] {\n  color : rgb(187, 187, 187);\n  background-color: rgba(230, 230, 229, 0.96);\n}\n\n</style>\n\n<script>\n\n/**\n * pin_dialog.js\n * Node-Red UI template for Node-Red Dashboard. \n * Custom dialog that asks for a PIN to allow actions\n * Enjoy it :). \n * -- Daniel\n *\n *\n * @license The Unlicense, http://unlicense.org/\n * @version 0.2\n * @author  Daniel Lando, https://github.com/robertsLando\n * @updated 2019-03-18\n * @link    ----\n *\n *\n */\n\nvar dialog;\n\n/* ==== */\n(function(scope) {\n    \n    scope.passcode = \"\";\n    scope.payload = \"\";\n    scope.inited = false;\n    \n    scope.init = function() {\n        scope.passcode = \"\";\n        //Hide the md-panel\n        $('#pin_insert').parent().parent().css(\"display\", \"none\");\n        //This trick make it works on smartphones too :)\n        dialog = $('#pin_insert').detach();\n        //dialog.appendTo(document.body); // This leaves ghost numpads if pinpad is not opened!\n    }\n    \n    scope.showDialog = function() {\n        dialog.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        dialog.css(\"display\", \"block\");\n    }\n    \n    scope.closeDialog = function(){\n        dialog.css(\"display\", \"none\");\n    }\n    \n    scope.add = function(value) {\n        if(scope.passcode.length < 4) {\n            scope.passcode = scope.passcode + value;\n            if(scope.passcode.length == 4) {\n                console.log(\"The four digit code was entered\");\n                   \n            }\n        }\n    }\n \n    scope.delete = function() {\n        if(scope.passcode.length > 0) {\n            scope.passcode = scope.passcode.substring(0, scope.passcode.length - 1);\n        }\n    }\n    \n    scope.confirm = function() {\n        if(scope.passcode.length == 4) {\n            scope.send({passcode: scope.passcode, payload : scope.payload});\n            scope.closeDialog();\n            scope.passcode = \"\";\n            scope.payload = \"\";\n        }\n    }\n\n    scope.$watch('msg', function(data) {\n        if(data && data.topic){\n            switch(data.topic){\n               case \"show\":\n                   if(scope.inited){\n                        scope.payload = data.payload;\n                        scope.showDialog();\n                   }\n                   else\n                        scope.inited = true;\n                break;\n                case \"close\": \n                    scope.closeDialog(); \n                break;\n            }\n        }\n    });\n})(scope);\n\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 295.3750343322754,
        "y": 939.9642696380615,
        "wires": [
            []
        ]
    },
    {
        "id": "6f661bbc.8cf5c4",
        "type": "ui_template",
        "z": "283de01b.130d1",
        "group": "b1c9a4fb.9d1828",
        "name": "שער",
        "order": 3,
        "width": "1",
        "height": "1",
        "format": "<!-- Trigger/Open The dialog -->\n<md-button ng-click=\"open($id, msg.payload.door)\" class=\"myctl vibrate touched dialog-button\">\n    <div style=\"margin-top:-5px;height:40%\">שער</div>\n    <font class=\"fa fa-bank fa-lg\" color={{msg.payload.door?'#FF4':'grey'}} />\n</md-button>\n\n<div id=\"{{'mydialog_'+$id}}\" class=\"dialog\">\n    <div class=\"dialog-content\" style=\"width: 156px\">\n        <div class=\"dialog-header\">\n            PIN\n            <span class=\"dialog-close\">&times;</span>\n        </div>\n        <div class=\"dialog-body\">\n            <input type=\"text\" ng-model=\"passcode\" name=\"pin\"/>\n            <md-button ng-repeat=\"x in [].constructor(9) track by $index\" \n                class=\"pin\"\n                ng-click=\"addDig($index+1)\">{{$index+1}}\n            </md-button><md-button class=\"touched pin fa fa-long-arrow-left\" \n                ng-click=\"delDig()\">\n            </md-button><md-button class=\"touched pin\" ng-click=\"addDig(0)\">0\n            </md-button><md-button class=\"vibrate touched pin fa fa-check\" ng-click=\"apply()\"></md-button>\n        </div>\n        <div>&nbsp;</div>\n    </div>\n</div>\n\n<script>\n\n(function(scope) {\n    scope.dlg = null;\n    \n    scope.open = (id, isOpen) => {\n        if (isOpen)\n            return scope.send({payload: \"\"});\n        \n        //This trick make it works on smartphones too :)\n        if (!scope.dlg) {\n            scope.dlg = $('#mydialog_'+id).detach();\n            scope.dlg.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        }\n        //$('#mydialog_'+id).css(\"display\", \"block\");\n        scope.dlg.css(\"display\", \"block\");\n        //dialog.appendTo(document.body); // This leaves ghost numpads if pinpad is not opened!\n        \n        \n        //$($('#mydialog_'+id).parentNode).css(\"overflow\", \"visible\");\n        scope.passcode = \"\";\n    }\n    \n    scope.closeDialog = function() {\n        $('.dialog').css(\"display\", \"none\");\n    }\n    \n    scope.addDig = v => scope.passcode += v;\n    scope.delDig = () => scope.passcode = scope.passcode.slice(0,-1);\n    \n    scope.apply = function() {\n        scope.send({payload: scope.passcode});\n        scope.closeDialog();\n    }\n})(scope);\n\n// Get the element that closes the dialog\n$('.dialog-close').on('click', e => {\n    $('.dialog').css(\"display\", \"none\");\n});\n\n// When the user clicks anywhere outside of the dialog, close it\nwindow.onclick = e => {\n    if ($(e.target).hasClass('dialog'))\n        $('.dialog').css(\"display\", \"none\");\n}\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "5f2c1c28.b4e054"
            ]
        ]
    },
    {
        "id": "5f2c1c28.b4e054",
        "type": "function",
        "z": "283de01b.130d1",
        "name": "check code",
        "func": "const state = global.get(\"garage\") || {};\n\nif (msg.payload !== \"4785\" && !state.door) \n    return;\n    \nmsg.payload = \"TriggerDoor\";\nmsg.topic = \"esp/L1/Garage/cmd\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "947ddb13.f8efd8"
            ]
        ]
    },
    {
        "id": "8fc7654b.17e248",
        "type": "function",
        "z": "283de01b.130d1",
        "name": "Upd garage",
        "func": "global.set(\"garage\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 40,
        "wires": [
            [
                "6f661bbc.8cf5c4"
            ]
        ]
    },
    {
        "id": "675d9010.fc98e",
        "type": "denon-in",
        "z": "283de01b.130d1",
        "name": "",
        "controller": "14a08956.667327",
        "x": 170,
        "y": 920,
        "wires": [
            [
                "6dd9716a.d6cd8"
            ]
        ]
    },
    {
        "id": "6dd9716a.d6cd8",
        "type": "debug",
        "z": "283de01b.130d1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 370,
        "y": 920,
        "wires": []
    },
    {
        "id": "557b0f57.d59bf",
        "type": "denon-out",
        "z": "283de01b.130d1",
        "name": "",
        "controller": "14a08956.667327",
        "unit_number": "1",
        "output": "1",
        "denoncommand": "",
        "x": 380,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b1851049.3f5e6",
        "type": "inject",
        "z": "283de01b.130d1",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "MV?",
        "payloadType": "str",
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "557b0f57.d59bf"
            ]
        ]
    },
    {
        "id": "42244e9.f6e1ab",
        "type": "function",
        "z": "283de01b.130d1",
        "name": "",
        "func": "return {\n    \"topic\": \"SetVolumeDB\",\n    \"payload\" : -30.5,\n    //payload: 'MV DOWN',\n    cb: function(val) {\n        node.warn(val);\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 1060,
        "wires": [
            [
                "557b0f57.d59bf"
            ]
        ]
    },
    {
        "id": "4ad50a0d.6ac014",
        "type": "inject",
        "z": "283de01b.130d1",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1060,
        "wires": [
            [
                "42244e9.f6e1ab"
            ]
        ]
    },
    {
        "id": "876b29de.202cf8",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "check presence",
        "func": "const my = global.get(\"my\", \"memoryOnly\");\nconst sTolerance = 5*60;\nlet uNow = new Date() / 1000 |0; //+ new Date().getTimezoneOffset() * 60 * 1000;\nconst people = {\n    Gilad:    \"04:d6:aa:d5:12:77\",      // Galaxy S8+    \"f4:09:d8:d6:d5:59\",       // Galaxy Note 4\n    Tali:     \"6e:d7:d6:2f:97:3d\",      // \"44:4a:db:1f:b8:5f\",      // iPhone 11 Pro Max           // iPhone 7+ \"4c:74:bf:78:f6:9b\",\n    Inbal:    \"76:a8:62:bf:3e:da\",      // Galaxy S20\n    Shahar:   \"f4:60:e2:a3:f8:ce\",\n    Yarden:   \"1c:cc:d6:42:62:d7\",      // Redmi Note 8 Pro     \"00:ae:fa:e2:36:02\",      // Galaxy S6     \"f4:60:e2:ad:eb:40\",  \"40:31:3c:ac:6d:cd\",\n    Omer:     \"12:6c:74:b9:42:a0\",      // Galaxy S20+     \"44:91:60:aa:4b:fd\",\n    Daniel:   \"c6:c1:46:22:78:e9\",\n    Tamar:    \"5e:09:c4:9f:67:7b\"\n};\n\nlet peopleArr = Object.keys(people);\nlet nPpl = Object.keys(people).length;\n\nlet devices = msg.payload[0].filter(dev => \n    (dev.name || dev.hostname || \"\").includes(\"Phone\"));\n\nconst curStat = context.get(\"curDevices\") || {};\n\nlet bChanged = false;\nconst timeline = [];\n\nObject.entries(people).forEach(([name, mac], idx) => {\n    let cur = curStat[name];\n    if (!cur) curStat[name] = cur = {};\n    let dev = devices.find(dev => dev.mac === mac) || {};\n    const ls = cur.lastSeen = dev.last_seen - dev.idletime || cur.lastSeen || 0;\n    //if (name === \"Gilad\") node.warn({name, seen: my.get_dur((uNow - ls)*1000)});\n    const isHome = ls > uNow - sTolerance; // || dev.last_seen > uNow - sTolerance;\n    if (isHome !== cur.isHome) {\n        bChanged = true;\n        cur.isHome = isHome;\n        timeline.push({name, isOn: isHome, fix: ls && (uNow - ls) * -1000});\n    }\n});\n\ncontext.set(\"curDevices\", curStat);\n\n//if (bChanged) timeline.forEach(t => node.warn(t));\nif (bChanged)\n    return {payload: timeline};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 720,
        "wires": [
            [
                "c3be8d97.29c86"
            ]
        ],
        "outputLabels": [
            "joep presence"
        ]
    },
    {
        "id": "7e4004b8.4cfa4c",
        "type": "ui_ui_control",
        "z": "f8865110.44c59",
        "name": "",
        "events": "change",
        "x": 260,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "9be4efe1.7cd54",
        "type": "ui_template",
        "z": "f8865110.44c59",
        "group": "7cdedc06.5fd6d4",
        "name": "Show Presence",
        "order": 1,
        "width": "1",
        "height": "1",
        "format": "<md-button \n    class=\"myctl vibrate touched\"\n    ng-click=\"send({payload: 'Presence'})\">\n    <div>מי בבית</div>\n    <font size=4>&#x1F46A;</font>\n    <!--font class=\"fa fa-users fa-lg\" color=grey></font-->\n</md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 100,
        "y": 680,
        "wires": [
            [
                "7e4004b8.4cfa4c",
                "c3be8d97.29c86"
            ]
        ]
    },
    {
        "id": "9d2facf1.793af",
        "type": "ui_template",
        "z": "f8865110.44c59",
        "group": "7c090a19.aff884",
        "name": "Back",
        "order": 1,
        "width": "1",
        "height": "1",
        "format": "<md-button \n    class=\"myctl vibrate touched\"\n    ng-click=\"send({payload: 'מכשירים'})\">\n    <div>back</div>\n    <font class=\"fa fa-arrow-left fa-2x\" color=#EEE/>\n</md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 70,
        "y": 640,
        "wires": [
            [
                "7e4004b8.4cfa4c"
            ]
        ]
    },
    {
        "id": "66887e1a.7b78",
        "type": "msg-resend",
        "z": "f8865110.44c59",
        "interval": "12",
        "intervalUnit": "hours",
        "maximum": "0",
        "bytopic": true,
        "clone": false,
        "firstDelayed": false,
        "addCounters": false,
        "highRate": true,
        "outputCountField": "",
        "outputMaxField": "",
        "name": "12h echo",
        "x": 600,
        "y": 1429,
        "wires": [
            [
                "6f124888.38edc8"
            ]
        ]
    },
    {
        "id": "8547df7c.5ad12",
        "type": "ui_template",
        "z": "f8865110.44c59",
        "group": "7c090a19.aff884",
        "name": "Timelines",
        "order": 4,
        "width": "6",
        "height": "3",
        "format": "<style>\n.timelines-top {\n    display: flex;\n    flex-flow: row nowrap;          /* direction & wrap */\n    justify-content: flex-start;    /* fit items into beginning of area */\n    align-items: stretch;           /* maximize to whole cross axis */\n    height: 0.8em;\n    line-height: 100%;\n    align-items: center;\n}\n\n.tl-row-title {\n    flex: 0 0 3.5em;\n    font-size: 8pt; \n    padding: 0px 2px;\n}\n.tl-row-title.no-end {\n    color: #4FF;\n}\n.tl-row-right {\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n}\n\n.timeline-row {\n    flex: 1 0;\n    position: relative; \n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    vertical-align: middle;\n    width: 100%;\n    height: 0.8em;\n}\n\n.timeline-row > span {\n    height: 0.5rem;\n    border-radius: 3px;\n    font-size: 5pt;\n    line-height: 1;\n    overflow: hidden;\n    white-space: nowrap;\n    text-align: center;\n    cursor: pointer;\n}\n.timeline-row > .no-end {\n    border-top-right-radius: 0 !important;\n    border-bottom-right-radius: 0 !important;\n}\n.timeline-row > .break {\n    cursor: default;\n    outline: none;\n}\n\n.tl-lastSeen {\n    display: block;\n    font-size: 6pt;\n    padding-left: .5em;\n}\n\n.background-ticks {\n    position: absolute; \n    display: flex;\n    width: 100%;\n    height: 100%; \n}\n\n.background-ticks > div {\n    flex: 0 1 100%;\n    border-left: .5px solid #777777FF;\n}\n\n.timeline-ticks {\n    display:flex; \n}\n.timeline-ticks > * {\n    flex: 0 1 100%; \n    font-size: 9pt;\n    text-align: center;\n}\n.timeline-ticks > *:first-child {\n    flex-basis: 50%;\n    text-align: left;\n}\n.timeline-ticks > *:last-child {\n    flex-basis: 50%;\n    text-align: right;\n}\n\n.dialog.tooltip {\n    background-color: unset;\n    opacity:0.85;\n}\n\n.tooltip .dialog-content {\n    background-color: #EEE;\n    border: 1px solid #333;\n    border-radius: 3px;\n    font-size: 10pt;\n    padding: 2px;\n    width: fit-content;\n}\n.tooltip .dialog-content > div {\n    width: 100%;\n    text-align: center;\n}\n</style>\n\n<div ng-repeat=\"row in msg.payload track by row.name\" class=\"timelines-top\">\n    <span class=\"tl-row-title {{!row.isOn? '' : 'no-end'}}\">{{row.name}}: </span>\n    <span class=\"tl-row-right\">\n        <span class=\"background-ticks\">\n            <div ng-repeat=\"tick in msg.ticks track by tick\"/>\n        </span>\n        <span ng-if=\"row.spans.length\" class=\"timeline-row\">\n            <span ng-repeat=\"spn in row.spans\" \n                style=\"flex: 0 1 {{spn.pct}}%; background-color: {{spn.clr || 'transparent'}}\"\n                class=\"{{!spn.id? 'break' : !spn.end? 'no-end' : ''}}\"\n                ng-click=\"spn.id && open(spn)\" id=\"{{'btn_'+eid+'_'+spn.id}}\"\n            >{{spn.tip.join(\" \")}}</span>\n        </span>\n        <span ng-if=\"!row.spans.length\" class=\"tl-lastSeen\">last seen: {{row.lastSeen}}</span>\n    </span>\n</div>\n<div class=\"timelines-top\">\n    <span class=\"tl-row-title\"></span>\n    <span class=\"tl-row-right timeline-ticks\">\n        <span ng-repeat=\"tick in msg.ticks track by tick\">\n            {{tick}}\n        </span>\n        <span>{{msg.now}}</span>\n    </span>\n</div>\n\n<!--\n<table cellspacing=0 cellpadding=0>\n    <tr ng-repeat=\"row in msg.payload track by row.name\" style=\"line-height: 0.7\">\n        <td class=\"tl-row-title {{!row.isOn? '' : 'no-end'}}\">{{row.name}}: </td>\n        <td style=\"position: relative\">\n            <div class=\"background-ticks\">\n                <div ng-repeat=\"tick in msg.ticks track by tick\"/>\n            </div>\n            <span class=\"timeline-row\">\n                <span ng-repeat=\"spn in row.spans\" \n                    style=\"flex: 0 1 {{spn.pct}}%; background-color: {{spn.clr || 'transparent'}}\"\n                    class=\"{{!spn.id? 'break' : !spn.end? 'no-end' : ''}}\"\n                    ng-click=\"spn.id && open(spn)\" id=\"{{'btn_'+eid+'_'+spn.id}}\"\n                >{{spn.tip.join(\" \")}}</span>\n            </span>\n            <span ng-if=\"!row.spans.length\">Latest: {{row.lastSeen}}</span>\n        </td>\n    </tr>\n    <tr>\n        <td></td>\n        <td class=\"timeline-ticks\">\n            <span ng-repeat=\"tick in msg.ticks track by tick\">\n                {{tick}}\n            </span>\n            <span>{{msg.now}}</span>\n        </td>\n    </tr>\n</table>\n-->\n\n<div id=\"{{'mydialog_'+eid}}\" class=\"dialog tooltip\">\n    <div class=\"dialog-content\">\n        <div ng-repeat=\"tp in tip\">{{tp}}</div>\n    </div>\n</div>\n\n<script>\n\n(function(scope) {\n    scope.eid = scope.$eval(\"$id\");\n    scope.dlg = null;\n    scope.tip = []\n\n    scope.open = (spn) => {\n        if (!scope.dlg) {\n            scope.dlg = $('#mydialog_'+scope.eid).detach();    //This trick makes it work on iOS too :)\n            scope.dlg.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        }\n        const rBtn = $('#btn_'+scope.eid+'_'+spn.id)[0].getBoundingClientRect();\n        scope.dlg.css(\"display\", \"block\");\n        \n        const cnt = scope.dlg.find(\".dialog-content\");\n        cnt.css({margin: 0, left: (rBtn.left|0) + \"px\", top: (rBtn.bottom|0) + \"px\"});\n        const rCnt = scope.dlg.find(\".dialog-content\")[0].getBoundingClientRect();\n        const rWin = $('#nr-dashboard')[0].getBoundingClientRect();\n        if (rCnt.right > rWin.right || rCnt.bottom > rWin.bottom)\n            cnt.css({\n                margin: 0, \n                left: (rCnt.right > rWin.right? rWin.right - rCnt.width : rBtn.left) + \"px\", \n                top: (rCnt.bottom > rWin.bottom? rWin.bottom - rCnt.height : rBtn.bottom) + \"px\"\n            });\n        \n        scope.tip = spn.tip;\n    }\n\n    scope.closeDialog = function() {\n        $('.dialog').css(\"display\", \"none\");\n    }\n})(scope);\n\n// When the user clicks anywhere outside of the dialog, close it\nwindow.onclick = e => {\n    if ($(e.target).hasClass('dialog'))\n        $('.dialog').css(\"display\", \"none\");\n}\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 800,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "c3be8d97.29c86",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Timeline Keeper",
        "func": "const bCombine = false, timelineHours = 12, numTicks = 4;\n\nconst my = global.get(\"my\", \"memoryOnly\");\n\nconst colors = ['#FF6633','#5DA5DA','#FAA43A','#60BD68','#F17CB0','#B2912F','#B276B2','#DECF3F','#F15854'];\nconst now = Date.now(), hr = 1000*60*60, msTot = timelineHours*hr, msMin = now - msTot;\n//const series = (global.get(\"presence\") || []).filter(s => s.name !== \"Shoham\");\nconst series = global.get(\"presence\") || [];\n\n// take in any new events for any of the series\nif (typeof msg.payload === \"boolean\" || typeof msg.payload[0] === \"object\") {\n    const events = typeof msg.payload[0] === \"object\" ? msg.payload :\n        [{name: msg.topic, isOn: msg.payload, clr: msg.color}];\n\n    events.forEach(({name, isOn, fix, clr}) => {\n        let ser = series.find(s => s.name === name);\n        if (!ser)\n            series.push(ser = {name, sections: [],\n                clr: clr || colors[series.length % colors.length]});\n        const prev = ser.sections[ser.sections.length-1];\n        if (isOn && (!prev || prev[1] < now + (fix||0) - 5000)) // if new event, ensure its at least 5 seconds after last ended\n            ser.sections.push([now-1 + (fix||0)]);              // create a new event. ms-1 to ensure it is shown\n        //else if (!isOn && !prev)                          // ignore events ended without open event\n        //    ser.sections.push([msMin, now]);              // create a new event\n        else if (!isOn && prev && !prev[1])                     // don't end it if already ended\n            prev[1] = now + (fix||0);                           // end last event\n    });\n}\n\n// remove any event which has ended before current time window\nseries.forEach(ser => {\n    //ser.sections = ser.sections.filter(sec => sec[1] > msMin && sec[0] <= now && sec[1] <= now);\n    let last;\n    while (ser.sections[0] && (last = ser.sections[0])[1] <= msMin)\n        ser.sections.shift();\n    if (ser.sections.length && last)\n        ser.lastSeen = last[1];\n});\n\nfunction last(arr) { return arr && arr[arr.length-1]; }\n\nseries.sort((a, b) => a.name === \"Garage\" ? -1 : b.name === \"Garage\" ? 1 :\n    (last(last(b.sections)) || b.lastSeen || 0) -\n    (last(last(a.sections)) || b.lastSeen || 0));\n\n//node.warn({series: series});\n\nglobal.set(\"presence\", series);\n\nconst payload = series.map((ser,si) => {\n    // convert events into percentages of our time window\n    const sections = ser.sections.map(sec => {\n        const msAt = Math.max(sec[0], msMin) - msMin;\n        const msEnd = (sec[1] || now) - msMin;\n        return {\n            at: msAt / msTot * 1000 |0, \n            end: Math.ceil(msEnd / msTot * 1000),\n            dt: sec[0], dtEnd: sec[1]\n        };\n    });\n    const spans = [];\n    // add holes between percentages, combine adjacent parts\n    sections.forEach((sec, i) => {\n        const prev = i && sections[i-1].end;\n        if (sec.at > prev)\n            spans.push({pct: (sec.at - prev)/10});\n        if (sec.at >= sec.end) return;\n        if (bCombine && sec.at === prev && i)\n            spans[spans.length].pct += (sec.end - sec.at)/10;\n        else\n            spans.push({\n                pct: (sec.end - sec.at)/10, \n                clr: ser.clr,\n                tip: [\n                    my.get_ddMM_Hmm(sec.dt, sec.dt >= msMin)+ \" - \" +\n                     (!sec.dtEnd? \"\" : my.get_ddMM_Hmm(sec.dtEnd, sec.dt >= msMin)),\n                    \"(\"+my.get_dur((sec.dtEnd || now) - sec.dt) +(!sec.dtEnd? \" +\" : \"\")+\")\"\n                ],\n                end: sec.dtEnd,\n                id: si+\"_\"+i\n            });\n    });\n    return {name: ser.name, spans, isOn: spans[0] && !spans[spans.length-1].end, \n        lastSeen: ser.lastSeen && (my.get_ddMM_Hmm(ser.lastSeen) + \"  (\"+my.get_dur(now - ser.lastSeen) +\")\")};\n});\n\n//const ticks = [...Array(numTicks)].map((_,i) => msMin+ i*(msTot/numTicks|0))\n//    .concat(now).map(ms => my.get_Hmm(ms));\nconst ticks = [...Array(numTicks)].map((_,i) => my.get_Hmm(msMin+ i*(msTot/numTicks|0)));\n\nreturn {payload, ticks, now: my.get_Hmm(now)};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 720,
        "wires": [
            [
                "8547df7c.5ad12"
            ]
        ]
    },
    {
        "id": "fe51222d.a7f2b",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "check presence",
        "func": "const lastSeenSeconds = 300;\nlet presenceCutoff = new Date() / 1000 - lastSeenSeconds +\n    new Date().getTimezoneOffset() * 60 * 1000;\nconst people = {\n    Gilad: \"04:d6:aa:d5:12:77\",         // Galaxy S8+    \"f4:09:d8:d6:d5:59\",       // Galaxy Note 4\n    Tali: \"4c:74:bf:78:f6:9b\",\n    Inbal: \"76:a8:62:bf:3e:da\",         // Galaxy S20\n    Shahar: \"f4:60:e2:a3:f8:ce\",\n    Yarden: \"1c:cc:d6:42:62:d7\",        // Redmi Note 8 Pro     \"00:ae:fa:e2:36:02\",      // Galaxy S6     \"f4:60:e2:ad:eb:40\",  \"40:31:3c:ac:6d:cd\",\n    Omer: \"12:6c:74:b9:42:a0\",          // Galaxy S20+     \"44:91:60:aa:4b:fd\",\n    Shoham: \"1c:cc:d6:45:39:b9\",    // \"8c:f5:a3:80:2f:cf\",  \"68:3e:34:52:f7:c5\",\n};\n\nlet peopleArr = Object.keys(people);\nlet nPpl = Object.keys(people).length;\n\nlet devices = msg.payload[0].filter(dev => \n    (dev.name || dev.hostname || \"\").includes(\"Phone\"));\n\nconst curStat = context.get(\"curDevices\") || {};\n\nlet bChanged = false;\nconst graphMsgs = [];\n\nObject.entries(people).forEach(([nm, mac], idx) => {\n    let dev = devices.find(dev => dev.mac === mac) || {};\n    let cur = curStat[nm];\n    if (!cur) curStat[nm] = cur = {};\n    const isHome = dev.last_seen > presenceCutoff;\n    if (cur.bChanged = (isHome !== cur.isHome)) {\n        bChanged = true;\n        if (typeof cur.isHome === \"boolean\") {\n            cur.tm = Date.now();\n            graphMsgs.push({topic: nm, payload: isHome ? 0 : idx+1});\n        }\n        cur.isHome = isHome;\n        graphMsgs.push({topic: nm, payload: !isHome ? 0 : idx+1});\n    }\n});\n\nif (!bChanged) return;\n\ncontext.set(\"curDevices\", curStat);\nreturn [graphMsgs];",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 1429,
        "wires": [
            [
                "66887e1a.7b78"
            ]
        ],
        "outputLabels": [
            "joep presence",
            ""
        ]
    },
    {
        "id": "500702c4.ee9c9c",
        "type": "function",
        "z": "38ee4b91.5dc3e4",
        "name": "Common JS",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nconst my = global.get(\"my\", \"memoryOnly\") || {};\n\nconst secUnits = {second: 1, minute: 60, hour: 60*60, day: 60*60*24, year: 60*60*24*365};\nconst units = Object.keys(secUnits), unitVals = Object.values(secUnits);\n\n// flags: long, addDate\nmy.get_durSingle = (ms, flags) => {\n    const {long, addDate} = flags || {};\n    const sec = ms / 1000 >> 0;\n    const unit = units.find((u,i) => i === units.length-1 || sec < unitVals[i+1]*2);\n    const val = sec / secUnits[unit] >> 0;\n    const str = val + (!long? unit[0] : \" \"+ unit + (val === 1? \"\" : \"s\"));\n    return !addDate? str : `${str} ago (${dt.toLocaleString(locale || \"en-US\")})`;\n};\n\nmy.get_dur = (ms) => {\n    const sec = ms / 1000 |0, parts = [];\n    for (let i = 0; !i || sec >= unitVals[i]-1; i++)\n        parts.unshift((sec % (unitVals[i+1] || 1) / unitVals[i] |0) + units[i][0]);\n    return parts.slice(0,2).join(\" \").replace(/ 0\\w/, '');\n    //return parts.slice(0,2).join(\":0\").replace(/:0(\\d\\d)/, \":$1\").replace(/:00\\w/, '');\n};\n\nmy.get_Hmm = (dt) => {\n    if (typeof dt === \"number\") dt = new Date(dt);\n    return dt.getHours() +\":\"+('0'+dt.getMinutes()).substr(-2);\n};\n\nmy.get_ddMM = (dt) => {\n    if (typeof dt === \"number\") dt = new Date(dt);\n    return dt.getDate() +\"/\"+(dt.getMonth()+1);\n};\n\nmy.get_ddMM_Hmm = (dt, noDate) => {\n    if (typeof dt === \"number\") dt = new Date(dt);\n    return (!noDate? my.get_ddMM(dt)+\", \" : \"\") + my.get_Hmm(dt);\n};\n\n\nglobal.set('my', my, 'memoryOnly');",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a764ec3e.e5eee",
        "type": "mqtt in",
        "z": "3e6b6884.b00d58",
        "name": "",
        "topic": "esp/L3/Boiler/state",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "dcf44868.4ef908"
            ]
        ]
    },
    {
        "id": "dcf44868.4ef908",
        "type": "function",
        "z": "3e6b6884.b00d58",
        "name": "Message",
        "func": "const st = msg.payload;\nreturn [\n    {payload: st.countDown? st.countDown + \" mins\" : st.numPeople? st.numPeople + \" ->\" + st.target : \"Off\"},\n    {payload: st.outlook > 0? st.outlook + \" showers ready\" : -st.outlook + \" mins for 1\"}\n];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 300,
        "y": 140,
        "wires": [
            [
                "4c570a17.b5fe94"
            ],
            [
                "b03dcb86.7f5d78"
            ]
        ]
    },
    {
        "id": "7a9298a.99df368",
        "type": "debug",
        "z": "f8865110.44c59",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 675,
        "y": 656,
        "wires": []
    },
    {
        "id": "d1ae2e1d.2d4d4",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Only person",
        "func": "let uNow = new Date() / 1000 |0; // + new Date().getTimezoneOffset() * 60 * 1000;\nconst people = {\n    Gilad:    \"04:d6:aa:d5:12:77\",      // Galaxy S8+    \"f4:09:d8:d6:d5:59\",       // Galaxy Note 4\n    Tali:     \"44:4a:db:1f:b8:5f\",      // iPhone 11 Pro Max           // iPhone 7+ \"4c:74:bf:78:f6:9b\",\n    Inbal:    \"76:a8:62:bf:3e:da\",      // Galaxy S20\n    Shahar:   \"f4:60:e2:a3:f8:ce\",\n    Yarden:   \"1c:cc:d6:42:62:d7\",      // Redmi Note 8 Pro     \"00:ae:fa:e2:36:02\",      // Galaxy S6     \"f4:60:e2:ad:eb:40\",  \"40:31:3c:ac:6d:cd\",\n    Omer:     \"12:6c:74:b9:42:a0\",      // Galaxy S20+     \"44:91:60:aa:4b:fd\",\n    Shoham:   \"1c:cc:d6:45:39:b9\",      // \"8c:f5:a3:80:2f:cf\",  \"68:3e:34:52:f7:c5\",\n};\n\nlet peopleArr = Object.keys(people);\nlet nPpl = Object.keys(people).length;\n\nlet devices = msg.payload[0].filter(dev => \n    (dev.name || dev.hostname || \"\").includes(\"Phone\"));\nconst dev = devices.find(dev => dev.mac === people.Omer)\nif (!dev) return;\n//msg.payload = {last: dev.last_seen, now: uNow};\nmsg.payload = {now: uNow, ...dev};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 465,
        "y": 656,
        "wires": [
            [
                "7a9298a.99df368"
            ]
        ],
        "outputLabels": [
            "joep presence"
        ]
    },
    {
        "id": "a8eb6403.430aa8",
        "type": "hikcamera-image-in",
        "z": "f8865110.44c59",
        "name": "RoofTop Image",
        "hikcamera": "456150fc.00f6b",
        "x": 320,
        "y": 920,
        "wires": [
            [
                "c182103d.98a12",
                "aac49e04.80c82"
            ]
        ]
    },
    {
        "id": "2f1cc05b.1bfce",
        "type": "hikcamera-alarm-in",
        "z": "f8865110.44c59",
        "name": "RoofTop Alarm",
        "hikcamera": "456150fc.00f6b",
        "x": 100,
        "y": 920,
        "wires": [
            [
                "a8eb6403.430aa8",
                "c3be8d97.29c86"
            ]
        ]
    },
    {
        "id": "c182103d.98a12",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "H:mm",
        "func": "const my = global.get(\"my\", \"memoryOnly\");\n\nmsg.payload = my.get_Hmm(new Date());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 920,
        "wires": [
            [
                "ddf86a04.d336f8"
            ]
        ]
    },
    {
        "id": "ddf86a04.d336f8",
        "type": "ui_template",
        "z": "f8865110.44c59",
        "group": "7c090a19.aff884",
        "name": "Refresh",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "<md-button \n    class=\"myctl vibrate touched\"\n    ng-click=\"send({payload: 'מכשירים'})\">\n    <div>refresh</div>\n    <font size=3 color=#EEE>{{msg.payload}}</font>\n</md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 660,
        "y": 920,
        "wires": [
            [
                "a8eb6403.430aa8",
                "c3be8d97.29c86"
            ]
        ]
    },
    {
        "id": "96bccb35.9d7548",
        "type": "file",
        "z": "f8865110.44c59",
        "name": "",
        "filename": "",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 270,
        "y": 1000,
        "wires": [
            [
                "afefe9e1.5108d8"
            ]
        ]
    },
    {
        "id": "aac49e04.80c82",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "filename",
        "func": "msg.img = \"/camera/RoofTop \"+ new Date(Date.now() - new Date().getTimezoneOffset()* 60*1000).toISOString().replace(/:/g, '_').replace(/T|\\..*/g, ' ').trim() +\".jpg\";\nmsg.filename = \"output\"+ msg.img;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "96bccb35.9d7548"
            ]
        ]
    },
    {
        "id": "afefe9e1.5108d8",
        "type": "fs-ops-dir",
        "z": "f8865110.44c59",
        "name": "Dir camera",
        "path": "output/camera",
        "pathType": "str",
        "filter": "*",
        "filterType": "str",
        "dir": "files",
        "dirType": "msg",
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "4da6d3db.ee66cc"
            ]
        ]
    },
    {
        "id": "4da6d3db.ee66cc",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "process files",
        "func": "const msMax = Date.now() - 12*60*60*1000;\nmsg.files.sort();\nconst cln = msg.files.map(f => \n    f.match(/\\d[\\d-_ ]+\\d/)[0].replace(/_/g, ':')\n);\n\nconst iKeep = cln.findIndex(d => msMax < new Date(d));\nif (iKeep < 0) return;\n\nconst all = msg.files.map((f,i) => ({img: f, nm: cln[i]})).slice(iKeep);\n\nreturn [\n    iKeep? {del: msg.files.slice(0, iKeep)} : null,\n    {all}\n];",
        "outputs": 2,
        "noerr": 0,
        "x": 570,
        "y": 1000,
        "wires": [
            [
                "a3ba139e.bae4f"
            ],
            [
                "6a50f535.18c28c"
            ]
        ]
    },
    {
        "id": "a3ba139e.bae4f",
        "type": "fs-ops-delete",
        "z": "f8865110.44c59",
        "name": "DEL > 12h",
        "path": "output/camera",
        "pathType": "str",
        "filename": "del",
        "filenameType": "msg",
        "x": 750,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "6a50f535.18c28c",
        "type": "ui_template",
        "z": "f8865110.44c59",
        "group": "7c090a19.aff884",
        "name": "RoofTop History",
        "order": 5,
        "width": "6",
        "height": "5",
        "format": "<style>\n.img-caro {\n  position: relative;\n  width: 100%;\n}\n.caro-slider {\n  position: relative;\n  display: flex;\n  width: 100%;\n}\n\n.caro-slider input[type=range] {\n  flex: 1 0;\n  width: 100%;\n  margin: 13.8px 0;\n  background-color: transparent;\n  -webkit-appearance: none;\n}\n.caro-slider input[type=range]:focus {\n  outline: none;\n}\n.caro-slider input[type=range]::-webkit-slider-runnable-track {\n  background: #3071a9;\n  border: 0.2px solid #010101;\n  border-radius: 1.3px;\n  width: 100%;\n  height: 8.4px;\n  cursor: pointer;\n}\n.caro-slider input[type=range]::-webkit-slider-thumb {\n  margin-top: -10px;\n  width: 16px;\n  height: 26px;\n  background: rgba(255, 254, 255, 0.9);\n  border: 1px solid #000000;\n  border-radius: 3px;\n  cursor: pointer;\n  -webkit-appearance: none;\n}\n.caro-slider input[type=range]:focus::-webkit-slider-runnable-track {\n  background: #367ebd;\n}\n\n.caro-slider button {\n    flex: 0 0;\n    background-color: transparent;\n    color: #EEE;\n    padding: 2px 5px;\n    border: 0;\n    outline: 0;\n}\n\n.img-caro img {\n  width: 100%;      /* Make the image responsive */\n  height: auto;\n}\n</style>\n\n<div class=\"img-caro\">\n    <div class=\"caro-slider\">\n        <button class=\"btn fa fa-chevron-left fa-lg\" ng-click=\"prev()\" />\n        <input type=\"range\" min=\"0\" max=\"{{msg.all.length-1}}\" ng-model=\"iMdl\" />\n        <button class=\"btn fa fa-chevron-right fa-lg\" ng-click=\"next()\" />\n    </div>\n    <div style=\"text-align: center\">{{msg.all[iImg].nm}}&nbsp;&nbsp;&nbsp;{{iImg+1}}/{{msg.all.length}}</div>\n    <img src=\"/camera/{{(msg.all[iImg] || msg.all[msg.all.length-1]).img}}\"/>\n</div>\n\n\n<script>\n(function(scope) {\n    scope.iImg = 0;\n    scope.orgMax = 0;\n    scope.lastChg = 0;\n    scope.iMdl = 0;\n    \n    scope.$watch('msg.all', function(all) {\n        if (!all) return;\n        const newMax = all.length-1;\n        let newIimg = scope.iImg;\n        //console.log(newIimg, scope.orgMax, newMax);\n        if (newIimg === scope.orgMax || scope.lastChg + 1000*60*30 < Date.now())\n            newIimg = newMax;\n        else if (newMax <= scope.orgMax) {\n            newIimg -= scope.orgMax - newMax + 1;\n            if (newIimg < 0)\n                newIimg = newMax;\n        }\n        scope.orgMax = newMax;\n        scope.iImg = scope.iMdl = newIimg;\n        //console.log(all[all.length-1].nm, newIimg, scope.orgMax, newMax, \"after\");\n        setTimeout(() => scope.iImg = scope.iMdl = newIimg, 0);\n    });\n    scope.$watch('iMdl', function(v) {\n        scope.iImg = v;\n    });\n    scope.prev = function() {\n        scope.lastChg = Date.now();\n        if (!scope.iImg) return;\n        scope.iImg--, scope.iMdl--;\n    }\n    scope.next = function() {\n        scope.lastChg = Date.now();\n        if (scope.iImg < scope.msg.all.length-1)\n            scope.iImg++, scope.iMdl++;\n    }\n})(scope);\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 760,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "2b87c038.412b7",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "garage snooze",
        "func": "const my = global.get(\"my\", \"memoryOnly\");\nconst ctx = context.garageSnooze = context.garageSnooze || {};\nconst unit = 1000 * 60;\n\nfunction UpdateButton() {\n    node.send([undefined, {\n        open: !!ctx.tmrUpd, \n        alarm: !!ctx.tmr, \n        openMins: my.get_dur(Date.now() - ctx.opened)\n    }]);\n}\n\nfunction InitDelay() {\n    clearTimeout(ctx.tmr);\n    ctx.tmr = setTimeout(() => {\n        node.send({payload: `Garage door is STILL OPEN after ${(Date.now() - ctx.opened) / unit | 0} minutes!!!`});\n        ctx.curDelay *= 1.5;\n        InitDelay();\n    }, ctx.curDelay);\n}\n\nswitch(msg.payload) {\n    case \"Garage door opened\":\n        ctx.opened = Date.now();\n        ctx.tmrUpd = setInterval(UpdateButton, unit / 4);\n    case \"alarm on\":\n        ctx.curDelay = 5*unit;\n        InitDelay();\n        UpdateButton();\n        break;\n        \n    case \"Garage door closed\":\n        clearTimeout(ctx.tmrUpd);\n        ctx.tmrUpd = 0;\n    case \"alarm off\":\n        clearTimeout(ctx.tmr);\n        ctx.tmr = 0;\n        UpdateButton();\n        break;\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 700,
        "y": 400,
        "wires": [
            [
                "31eacb9.61c4e34",
                "bcbc1481.027f48"
            ],
            [
                "1bb58972.a6c207"
            ]
        ]
    },
    {
        "id": "2611745d.9ece0c",
        "type": "inject",
        "z": "f8865110.44c59",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Garage door open",
        "payloadType": "str",
        "x": 550,
        "y": 280,
        "wires": [
            [
                "2b87c038.412b7"
            ]
        ]
    },
    {
        "id": "a8bda4e.ac54b58",
        "type": "inject",
        "z": "f8865110.44c59",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Garage door closed",
        "payloadType": "str",
        "x": 550,
        "y": 320,
        "wires": [
            [
                "2b87c038.412b7"
            ]
        ]
    },
    {
        "id": "1bb58972.a6c207",
        "type": "ui_template",
        "z": "f8865110.44c59",
        "group": "b1c9a4fb.9d1828",
        "name": "garage alarm toggle",
        "order": 7,
        "width": "1",
        "height": "1",
        "format": "<div class=\"button-row\">\n<md-button\n    class=\"myctl vibrate touched\"\n    ng-click=\"msg.open && send({payload: 'alarm '+ (msg.alarm? 'off' : 'on')})\">\n    <font class=\"{{msg.alarm?'fa fa-volume-up fa-lg':'fa fa-volume-off fa-lg'}}\" color={{msg.open?'#FF4':'grey'}} />\n    <br/>\n    <font size=2 color={{msg.open?'#F44':'grey'}} >{{msg.openMins}}</font>\n</md-button>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 940,
        "y": 400,
        "wires": [
            [
                "2b87c038.412b7"
            ]
        ]
    },
    {
        "id": "31eacb9.61c4e34",
        "type": "debug",
        "z": "f8865110.44c59",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 900,
        "y": 340,
        "wires": []
    },
    {
        "id": "d6223de1.2585e",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Gilad out",
        "func": "let uNow = new Date() / 1000 |0;\nmsg.payload = [[{mac: \"04:d6:aa:d5:12:77\", name: \"Phone\", last_seen: uNow, idletime: 7*60}]];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 260,
        "y": 520,
        "wires": [
            [
                "876b29de.202cf8"
            ]
        ]
    },
    {
        "id": "192e5cb2.7d87e3",
        "type": "inject",
        "z": "f8865110.44c59",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "d6223de1.2585e"
            ]
        ]
    },
    {
        "id": "2d6ce5ec.76f3ea",
        "type": "function",
        "z": "f8865110.44c59",
        "name": "Gilad home",
        "func": "let uNow = new Date() / 1000 |0;\nmsg.payload = [[{mac: \"04:d6:aa:d5:12:77\", name: \"Phone\", last_seen: uNow, idletime: 0}]];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 560,
        "wires": [
            [
                "876b29de.202cf8"
            ]
        ]
    },
    {
        "id": "71f0088b.f367e8",
        "type": "inject",
        "z": "f8865110.44c59",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 560,
        "wires": [
            [
                "2d6ce5ec.76f3ea"
            ]
        ]
    },
    {
        "id": "6a754df3.ecfe44",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "Setup Dispatcher",
        "func": "const appl = global.get(\"appliances\");\nconst aplTypes = context.get(\"aplTypes\");\nconst uiTmpl = global.get(\"uiTmpl\") || {};\n\nfunction fillArr(arr, apl) {\n    const at = aplTypes[apl.t];\n    arr[apl.iOut] = {\n        ...apl,\n        template: at.elms? uiTmpl.popbtn : uiTmpl.btn,\n        at\n    }\n    return arr;\n}\n\nif (msg.dev)\n    return msg.dev\n        .reduce((ac,a) => fillArr(ac, a), []);\nelse\n    return Object.values(appl)\n        .reduce((ac,d) => (d.forEach(a => fillArr(ac, a)), ac), []);",
        "outputs": 6,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\n// Order of devices here must correspond to order of node outputs!!\n// key use by device prep node and for topic path\n// t: type used aplTypes\n// h: title on button\n// path: used to construct topic text (path+'/'+key)\n// dflt: ON value if no prev0 value when turning on\nconst appl = {      \n    PcDesk: [\n        {t: \"led1\", h: \"שולחן\", path: \"esp/Dimmer\", chl: 0, dflt: 10},   // chl can be number or array\n        {t: \"fan\", h: \"שולחן\", path: \"esp/Dimmer\", chl: 1, dflt: 10}\n    ],\n    Island: [\n        {t: \"wrgb\", h: \"אי\", path: \"esp/L2\", chl: 0, dflt: \"80000000\"},\n    ],\n    Boiler: [\n        {t: \"boiler\", h: \"בוילר\", path: \"esp/L3\"},\n    ],\n    ShuttersParents: [\n        {t: \"shutters\", h: \"תריס\", h2: \"הורים\", pathFull: \"esp/L3/Shutters/Parents\"},\n        {t: \"lgtsw\", h: \"מרפסת\", h2: \"הורים\", pathFull: \"esp/L3/Shutters/Parents\"},\n    ]\n};\n\nlet iOut = 0, aOld;\nconst oldAppl = global.get(\"appliances\") || {};\n\nObject.entries(appl).forEach(([k,d]) => d.forEach(a => {\n    if (oldAppl[k] && (aOld = oldAppl[k].find(ao => ao.t === a.t && ao.h === a.h)))\n        Object.assign(a, {...aOld, ...a});\n    a.iOut = iOut++;\n    a.topic = (a.pathFull || `${a.path}/${k}`) + '/';\n    if (a.chl !== undefined)\n        (typeof a.chl === \"number\"? [a.chl] : a.chl)\n            .forEach((c,i,ar) => {\n                const zc = c - ar[0];\n                a['c'+zc] = 0;\n            });\n\n}));\n\nglobal.set(\"appliances\", appl);\n\n// fa: https://fontawesome.com/v4.7.0/icons/\n// md: https://klarsys.github.io/angular-material-icons/\n\nconst aplTypes = {\n    led1: {\n        t: \"hdr-icn-val\",\n        w: 4,\n        icnFa: \"fa fa-lightbulb-o fa-2x\",\n        a: \"togLedOnOff()\",\n        iStyle: \"color: #FF4\",\n        iStyleCond: \"msg.c0\",\n        v: \"msg.c0\",\n        vStyle: \"color: #9E8\",\n        elms: [\n            {t: \"btn\", h: \"100%\", a: \"setPwmFade(100)\"},\n            {t: \"btn\", h: \"50%\", a: \"setPwmFade(50)\"},\n            {t: \"btn\", h: \"10%\", a: \"setPwmFade(10)\"},\n            {t: \"btn\", h: \"OFF\", a: \"setPwmFade(0)\"},\n            {t: \"slider\", msgBind: \"c0\", vmin: 0, vmax: 100, a: \"setBySlider()\"},\n            {t: \"btn\", h: \"Strobe\", a: \"setStrobe()\"},\n            {t: \"time\", h: \"off\", \n                aOff: \"send({topic: msg.topic+'cmd', payload: `c${msg.chl} p${msg.c0} t0 d${ms} ; c${msg.chl} p0 t10000`})\",    // can use: elm,msg,ms,secs\n                aRmvOff: \"send({topic: msg.topic+'cmd', payload: `c${msg.chl} p${msg.c0}`})\"},\n     ]\n    },\n    fan: {\n        t: \"hdr-icn-val\",\n        w: 4,\n        icnMd: \"toys\",\n        a: \"togFanOnOff()\",\n        iStyle: \"color: #FF4\",\n        iStyleCond: \"msg.c0\",\n        v: \"msg.c0\",\n        vStyle: \"color: #9E8\",\n        elms: [\n            {t: \"btn\", h: \"100%\", a: \"setPwmFan(100)\"},\n            {t: \"btn\", h: \"50%\", a: \"setPwmFan(50)\"},\n            {t: \"btn\", h: \"10%\", a: \"setPwmFan(10)\"},\n            {t: \"btn\", h: \"OFF\", a: \"setPwmFan(0)\"},\n            {t: \"slider\", msgBind: \"c0\", vmin: 0, vmax: 100, a: \"setBySlider()\"},\n            {t: \"time\", h: \"off\", \n                aOff: \"send({topic: msg.topic+'cmd', payload: `c${msg.chl} p${msg.c0} t0 d${ms} ; c${msg.chl} p0 t10000`})\",\n                aRmvOff: \"send({topic: msg.topic+'cmd', payload: `c${msg.chl} p${msg.c0}`})\"},\n        ]\n    },\n    wrgb: {\n        t: \"hdr-icn-val\",\n        w: 4,\n        icnFa: \"fa fa-lightbulb-o fa-2x\",\n        a: \"togWrgbOnOff()\",\n        iStyle: \"color: #FF4\",\n        iStyleCond: \"msg.c0\",\n        v: \"msg.c0\",\n        vStyle: \"color: #9E8\",\n        elms: [\n            {t: \"btn\", h: \"100%\", a: \"setWrgbWhite(100)\"},\n            {t: \"btn\", h: \"50%\", a: \"setWrgbWhite(50)\"},\n            {t: \"btn\", h: \"10%\", a: \"setWrgbWhite(10)\"},\n            {t: \"btn\", h: \"OFF\", a: \"setWrgb('00000000')\"},\n            //{t: \"slider\", msgBind: \"wh\", vmin: 0, vmax: 100, a: \"setBySliderWrgb()\"},\n            {t: \"bright\", msgBind: \"wh\", a: \"setBySliderWrgb()\"},\n            {t: \"time\", h: \"off\", \n                aOff: \"send({topic: msg.topic+'setsoff', payload: ''+ms})\",\n                aRmvOff: \"send({topic: msg.topic+'setsoff', payload: '0'})\"},\n            {t: \"color\", msgBind: \"rgb\"},\n            {t: \"select\", h: \"אפקט\", msgBind: \"mode\", a: \"send({topic: msg.topic+'setmode', payload: msg.mode})\", \n                opts: {0: \"Static\", 3: \"Color Wipe\", 7: \"Color Wipe Random\", 8: \"Random Color\", 9: \"Single Dynamic\", \n                    10: \"Multi Dynamic\", 11: \"Rainbow\", 12: \"Rainbow Cycle\", 16: \"Theater Chase\", 17: \"Theater Chase Rainbow\", \n                    18: \"Running Lights\", 20: \"Twinkle Random\", 25: \"Hyper Sparkle\", 32: \"Chase Random\", 33: \"Chase Rainbow\", \n                    36: \"Chase Rainbow White\", 38: \"Chase Blackout Rainbow\", 39: \"Color Sweep Random\", 40: \"Running Color\", \n                    41: \"Running Red Blue\", 42: \"Running Random\", 43: \"Larson Scanner\", 44: \"Comet\", 46: \"Fireworks Random\", \n                    47: \"Merry Christmas\", 48: \"Fire Flicker\", 49: \"Fire Flicker Soft\", 50: \"Fire Flicker Intense\", \n                    51: \"Circus Combustus\", 52: \"Halloween\", 53: \"Bicolor Chase\", 54: \"Tricolor Chase\"}},\n        ]\n    },\n    boiler: {\n        t: \"hdr-val\",\n        w: 3,\n        v: \"msg.disp\",\n        elms: [\n            {t: \"btn\", h: \"מקלחות\", icnTx: \"&#x1f478;\", a: \"send({topic: msg.topic+'cmd', payload: 'tapPeople'})\"},\n            {t: \"btn\", h: \"טיימר\", icnTx: \"&#x23f1;\", a: \"send({topic: msg.topic+'cmd', payload: 'tapCountdown'})\"},\n            {t: \"btn\", h: \"כיבוי\", icnFa: \"fa fa-power-off fa-lg\", a: \"send({topic: msg.topic+'cmd', payload: 'tapOff'})\"},\n            {t: \"btn\", h: \"גראפ\", icnFa: \"fa fa-area-chart fa-2x\", iStyle: \"color: #86F\", \n                a: \"closeDialog(); send({apply:'my.uiControl(`WaterTank`)'})\"},\n        ]\n    },\n    shutters: {\n        t: \"hdr-hdr2-val\",\n        w: 2,\n        v: \"msg.pos\",\n        vStyle: \"color: #9E8\",\n        elms: [\n            {t: \"btn\", h: \"פתוח\", a: \"send({topic: msg.topic+'cmd', payload: msg.moving==='UP'? 'STOP' : 100})\",\n                icnFa: \"fa fa-step-forward fa-lg fa-rotate-270\", iStyle: \"color: #FF4\", iStyleCond: \"msg.moving==='UP'\"},\n            {t: \"btn\", h: \"+10%\", a: \"send({topic: msg.topic+'cmd', payload: msg.pos < 90? msg.pos+10 : 100})\"},\n            {t: \"btn\", h: \"סגור\", a: \"send({topic: msg.topic+'cmd', payload: msg.moving==='DOWN'? 'STOP' : 0})\",\n                icnFa: \"fa fa-step-forward fa-lg fa-rotate-90\", iStyle: \"color: #FF4\", iStyleCond: \"msg.moving==='DOWN'\"},\n            {t: \"btn\", h: \"מדורגת\", a: \"send({topic: msg.topic+'wakeup', payload: msg.wakeup && msg.wakeup < 100 ? 0 : 1})\", \n                icnFa: \"fa fa-list fa-lg\"},\n            {t: \"btn\", h: \"חריצים\", a: \"send({topic: msg.topic+'cmd', payload: 12})\", icnFa: \"fa fa-list fa-lg\"},\n            // {t: \"btn\", h: \"debug\", a: \"send({topic: msg.topic+'cmd', payload: `DUMMY${msg.d ^1}`})\", \n            {t: \"btn\", h: \"debug\", a: \"send({topic: msg.topic+'cmd', payload: 'DUMMY'+(msg.d ^1)})\", \n                icnFa: \"fa fa-ban fa-lg\", iStyle: \"color: #FF4\", iStyleCond: \"msg.d\"},\n            {t: \"time\", h: \"השכמה\", \n                aOff: \"send({topic: msg.topic+'wakeup', payload: secs})\", \n                aRmvOff: \"send({topic: msg.topic+'wakeup', payload: 0})\"},\n        ]\n    },\n    lgtsw: {\n        t: \"bgicn-hdr-hdr2\",\n        a: \"send({topic: msg.topic+'cmd', payload: 'sw1,'+(msg.sw[0] ^1)})\",\n        icnFa: \"fa fa-lightbulb-o fa-3x\",\n        iStyle: \"color: #FF4\",\n        iStyleCond: \"msg.sw[0]\",\n    }\n};\n\ncontext.set(\"aplTypes\", aplTypes);\n\n\n",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 180,
        "wires": [
            [
                "1d88e39a.5ff43c"
            ],
            [
                "da0b9aa6.d883e8"
            ],
            [
                "81748804.1ecf18"
            ],
            [
                "c6712985.1b7608"
            ],
            [
                "6c8bf83a.7a92d8"
            ],
            [
                "de0aaa8d.f5b0d8"
            ]
        ]
    },
    {
        "id": "1d88e39a.5ff43c",
        "type": "ui_template",
        "z": "d4b1bd47.24b07",
        "group": "c7bb58b6.261158",
        "name": "Pc Light",
        "order": 1,
        "width": "1",
        "height": "1",
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 800,
        "y": 140,
        "wires": [
            [
                "6a8ee662.4a0298"
            ]
        ]
    },
    {
        "id": "4c721159.6bb2",
        "type": "mqtt in",
        "z": "d4b1bd47.24b07",
        "name": "",
        "topic": "esp/Dimmer/+/state",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "nl": false,
        "rap": false,
        "x": 130,
        "y": 220,
        "wires": [
            [
                "b097fd90.b4b85"
            ]
        ]
    },
    {
        "id": "da0b9aa6.d883e8",
        "type": "ui_template",
        "z": "d4b1bd47.24b07",
        "group": "c7bb58b6.261158",
        "name": "Pc Desk Fan",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 810,
        "y": 180,
        "wires": [
            [
                "6a8ee662.4a0298"
            ]
        ]
    },
    {
        "id": "8c50368.ce216c8",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "Save Template",
        "func": "const uiTmpl = global.get(\"uiTmpl\") || {};\n\nObject.assign(uiTmpl, msg.template);\n\nglobal.set('uiTmpl', uiTmpl);\n\nreturn {};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 60,
        "wires": [
            [
                "6a754df3.ecfe44"
            ]
        ]
    },
    {
        "id": "e7b630d6.295db",
        "type": "inject",
        "z": "d4b1bd47.24b07",
        "name": "init",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.01",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "235a2fc.5c2a9d"
            ]
        ]
    },
    {
        "id": "61289668.27fb68",
        "type": "template",
        "z": "d4b1bd47.24b07",
        "name": "Popup Btn",
        "field": "template.popbtn",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "<!-- msg: appliance: {t: <type>, h: <title>, chl: <num|array<num>>, c<n>: cur pwm val, topic, state, template} -->\n<!-- Trigger/Open The dialog -->\n\n<md-button ng-click=\"open($id)\" id=\"{{'btn_'+$id}}\" \n        class=\"{{msg.at.cls || 'myctl'}} {{msg.lwt && 'ctl-lwt'}} vibrate touched dialog-button\" aria-label=\"x\">\n    <div ng-if=\"msg.h\" class=\"{{msg.at.t.startsWith('hdr-')? 'flex30' : ''}}\" >{{msg.h}}</div>\n    <div ng-if=\"msg.h2\" class=\"flex30\" >{{msg.h2}}</div>\n    <div ng-if=\"msg.at.t === 'hdr-icn-val'\" class=\"left-icon\">\n        <md-button ng-click=\"$event.stopPropagation(); myEval(msg, msg.at.a);\" class=\"mysubctl vibrate touched\" aria-label=\"x\">\n            <i ng-if=\"msg.at.icnFa\" class={{msg.at.icnFa}} \n                style=\"color: grey; {{msg.at.iStyle && (!msg.at.iStyleCond || $eval(msg.at.iStyleCond))? msg.at.iStyle : ''}}\"/>\n            <ng-md-icon ng-if=\"msg.at.icnMd\" icon={{msg.at.icnMd}} \n                style=\"fill:{{msg.at.onClr && (!msg.at.onCond || $eval(msg.at.onCond)) ?msg.at.onClr : 'grey'}}\" />\n        </md-button>\n        <div style=\"line-height: 1; font-size: 120%; {{msg.at.vStyle && (!msg.at.vStyleCond || $eval(msg.at.vStyleCond))? msg.at.vStyle : ''}}\">{{$eval(msg.at.v)}}</div>\n    </div>\n    <div ng-if=\"msg.at.t.includes('-val') && msg.at.t !== 'hdr-icn-val'\" class=\"flex\" \n        style=\"line-height: 1; font-size: 120%; {{msg.at.vStyle && (!msg.at.vStyleCond || $eval(msg.at.vStyleCond))? msg.at.vStyle : ''}}\">{{$eval(msg.at.v)}}</div>\n    <i ng-if=\"msg.at.t.startsWith('bgicn-') && msg.at.icnFa\" class=\"{{msg.at.icnFa}}\" \n        style=\"position: absolute; z-index: 4; opacity: 0.8; color: grey; {{msg.at.iStyle && (!msg.at.iStyleCond || $eval(msg.at.iStyleCond))? msg.at.iStyle : ''}}\"/>\n</md-button>\n\n\n<div id=\"{{'mydialog_'+$id}}\" class=\"dialog popup\">\n    <div class=\"dialog-content\" style=\"width: {{(msg.at.w || 3) * 48}}px\">\n        <div class=\"dialog-body\" style=\"display: flex; flex-direction: row; flex-wrap: wrap;\">\n            <div ng-repeat=\"elm in msg.at.elms track by $index\" ng-switch=\"elm.t\">\n                <div ng-switch-when=\"btn\"><md-button \n                    class=\"myctl vibrate touched\" style=\"line-height:1\"\n                    ng-click=\"myEval(msg, elm.a, elm)\">\n                    <div class=\"flex30\">{{elm.h}}</div>\n                    <font ng-if=\"elm.icnTx\" size=4 class=\"flex\" ng-bind-html=\"elm.icnTx\"></font>\n                    <i ng-if=\"elm.icnFa\" class=\"flex {{elm.icnFa}}\" style=\"{{elm.iStyle && (!elm.iStyleCond || $eval(elm.iStyleCond))? elm.iStyle : ''}}\"/>\n                </md-button></div>\n\n                <div ng-switch-when=\"slider\" class=\"myctl slider\">\n                    <md-slider min={{elm.vmin}} max={{elm.vmax}} step=\"1\" aria-label=\"x\"\n                       ng-model=\"msg[elm.msgBind]\" ng-change=\"myEval(msg, elm.a, elm)\">\n                    </md-slider>\n                    <div ng-bind-html=\"msg[elm.msgBind]\" class=\"dimValue\"></div>\n                </div>\n    \n                <div ng-switch-when=\"time\" class=\"nr-dashboard-textinput\">\n                    <md-input-container class=\"md-block flex has-label md-input-has-value\" flex=\"\" \n                        md-is-error=\"false\">\n                        <input type=\"time\" placeholder={{elm.h}} aria-label={{elm.h}} \n                            ng-model=\"cur.tmOff\" ng-change=\"sendOff(elm, msg)\" aria-invalid=\"false\"/>\n                        <button ng-if=\"cur.tmOff\" ng-click=\"rmvOff(elm, msg)\">&times;</button>\n                    </md-input-container>\n                </div>\n\n                <div ng-switch-when=\"bright\" id=\"iro-bright-picker\"></div>\n                <div ng-switch-when=\"color\" id=\"iro-color-picker\"></div>\n                <!--input ng-switch-when=\"color\" type=\"color\" ng-model=\"msg[elm.msgBind]\" ng-change=\"myEval(msg, elm.a)\"-->\n                \n                <md-select ng-switch-when=\"select\"\n                    ng-model=\"msg[elm.msgBind]\" ng-change=\"myEval(msg, elm.a, elm)\"\n                    placeholder={{elm.h}} class=\"myctl ng-pristine ng-untouched ng-valid flex-100 ng-empty\" >\n                    <md-option ng-repeat=\"(key, val) in elm.opts track by key\" \n                        ng-value=\"key\">{{val}}</md-option>\n                </md-select>\n            </div>\n        </div>\n    </div>\n</div>\n\n<script>\n\n(function(scope) {\n    scope.dlg = null;\n    scope.cur = {tmOff: null};      // ng-model shouldn't change a scope val, only within an object!\n    \n    scope.$watch('msg.msOff', function(tm) {\n        if (tm) {\n            tm = new Date(tm);\n            tm.setSeconds(0, 0);\n        }\n        scope.cur.tmOff = tm || null;\n    });\n    \n    scope.open = (id, idx) => {\n        //This trick make it works on smartphones too :)\n        if (!scope.dlg) {\n            scope.dlg = $('#mydialog_'+id).detach();\n            scope.dlg.appendTo(document.body); // better to add the body only when the numpad is displayed (seams to be removed automatically)\n        }\n        \n        // create color picker in display range.\n        let iroElm = !scope.iroClr && scope.dlg.find(\"#iro-color-picker\")[0];\n        if (iroElm) {\n            scope.iroClr = new iro.ColorPicker(iroElm, { // Option guide: https://iro.js.org/guide.html#color-picker-options\n                width: 96,\n                color: scope.msg.c0? scope.msg.rgb : \"#ff0000\",\n                padding: 4,\n                handleRadius: 8,\n                borderWidth: 0.5,\n                borderColor: \"#fff\",\n                layoutDirection: \"horizontal\",\n                zlayout: [{ \n                    component: iro.ui.Wheel,\n                }, { \n                    component: iro.ui.Slider,\n                }],\n            });\n            scope.iroClr.on([\"color:change\"], function(color) {\n                scope.setWrgb((scope.msg.wrgb || \"00\").substr(0,2) + color.hexString.substr(1), true);\n            });\n        }\n        \n        // create color picker in display range.\n        iroElm = !scope.iroBrt && scope.dlg.find(\"#iro-bright-picker\")[0];\n        if (iroElm) {\n            scope.iroBrt = new iro.ColorPicker(iroElm, { // Option guide: https://iro.js.org/guide.html#color-picker-options\n                width: 96,\n                color: ['#','','',''].join((scope.msg.wrgb || \"00\").substr(0,2)),\n                padding: 4,\n                handleRadius: 8,\n                borderWidth: 0.5,\n                borderColor: \"#fff\",\n                layout: [{\n                  component: iro.ui.Slider,\n                  options: {\n                    sliderType: 'value'\n                  }\n                }]\n            });\n            scope.iroBrt.on([\"color:change\"], function(color) {\n                scope.setWrgbWhite(color.value, true);\n            });\n        }\n        \n        const rBtn = $('#btn_'+id)[0].getBoundingClientRect();\n        scope.dlg.css(\"display\", \"block\");\n        const cnt = scope.dlg.find(\".dialog-content\");\n        cnt.css({margin: 0, left: (rBtn.left|0) + \"px\", top: (rBtn.bottom|0) + \"px\"});\n        const rCnt = scope.dlg.find(\".dialog-content\")[0].getBoundingClientRect();\n        const rWin = $('#nr-dashboard')[0].getBoundingClientRect();\n        if (rCnt.right > rWin.right || rCnt.bottom > rWin.bottom)\n            cnt.css({\n                margin: 0, \n                left: (rCnt.right > rWin.right? rWin.right - rCnt.width : rBtn.left) + \"px\", \n                top: (rCnt.bottom > rWin.bottom? rWin.bottom - rCnt.height : rBtn.bottom) + \"px\"\n            });\n\n        // ng-model-options=\"{'timezone':'UTC'}\" \n        //console.log((new Date(Date.now() + msOff)).toTimeString().split(\" \")[0]);\n        // let tm = scope.msg.msOff;\n        // if (tm) {\n        //     tm = new Date(tm);\n        //     tm.setSeconds(0, 0);\n        // }\n        // scope.tmOff = tm;\n    }\n    \n    scope.closeDialog = function(bDelay) {\n        clearTimeout(scope.closeTmr);\n        scope.closeTmr = setTimeout(() => $('.dialog').css(\"display\", \"none\"), bDelay? 5000 : 0);\n    }\n    \n    scope.myEval = function(msg, evl, elm) {\n        const {send} = scope, {at} = msg; \n        eval(evl);\n    }\n    \n    scope.togLedOnOff = function() {\n        const {c0, prev0, dflt} = scope.msg;\n        scope.setPwmFade(!c0? prev0 || dflt : 0);\n        // const {chl, c0, prev0} = scope.msg;\n        // scope.send({topic: scope.msg.topic + 'cmd', payload: \n        //     !c0? `c${chl} p${prev0} t1000 d${4*60*60*1000} ; c${chl} p0 t10000` :\n        //          `c${chl} p0 t1000`\n        // });\n    }\n    \n    scope.togFanOnOff = function() {\n        const {c0, prev0, dflt} = scope.msg;\n        scope.setPwmFan(!c0? prev0 || dflt : 0);\n    }\n\n    scope.setPwmFade = function(tgt) {\n        const chl = scope.msg.chl;\n        scope.send({topic: scope.msg.topic + 'cmd', payload: \n            tgt > 0? `c${chl} p${tgt} t1000 d${4*60*60*1000} ; c${chl} p0 t10000` :\n                     `c${chl} p0 t1000`\n        });\n        scope.closeDialog();\n    }\n    \n    scope.setPwmFan = function(tgt) {\n        const chl = scope.msg.chl;\n        scope.send({topic: scope.msg.topic + 'cmd', payload: \n            tgt === 100? `c${chl} p100 t0 d${4*60*60*1000} ; c${chl} p0` :\n            tgt === 0?   `c${chl} p0` :\n                         `c${chl} p100 t0 d300; c${chl} p${tgt} t0 d${4*60*60*1000} ; c${chl} p0`\n        });\n        scope.closeDialog();\n    }\n    \n    scope.setBySlider = function() {\n        const chl = scope.msg.chl;\n        const tgt = scope.msg.c0;\n        scope.send({topic: scope.msg.topic + 'cmd', payload: \n            tgt > 0? `c${chl} p${tgt} t0 d${4*60*60*1000} ; c${chl} p0 t10000` :\n                     `c${chl} p0`\n        });\n        scope.closeDialog(true);\n    }\n\n    scope.setStrobe = function(tgt) {\n        const chl = scope.msg.chl;\n        scope.send({topic: scope.msg.topic + 'cmd', payload: `c${chl} p${scope.msg.c0 || 50} t500 ; c${chl} p0 t500 *`});\n    }\n    \n    scope.sendOff = (elm, msg) => {\n        clearTimeout(scope.closeTmr);\n        if (!scope.cur.tmOff) return;\n        let wu = new Date(scope.cur.tmOff);\n        wu = wu.getTime() - wu.setHours(0,0,0,0);\n        const d = new Date(), now = d.getTime() - d.setHours(0,0,0,0);\n        const ms = (wu > now ? 0 : 24*60*60*1000) + wu - now;\n        const secs = ms / 1000 |0;\n        const {send} = scope;\n        scope.closeTmr = setTimeout(() => {\n            eval(elm.aOff);\n            scope.closeDialog();\n        }, 5000);\n    };\n    \n    scope.rmvOff = (elm, msg) => {\n        scope.cur.tmOff = null;\n        const {send} = scope;\n        eval(elm.aRmvOff);\n        scope.closeDialog(true);\n    };\n    \n\n    scope.togWrgbOnOff = function() {\n        const {c0, prev0, dflt} = scope.msg;\n        scope.setWrgb(!c0? prev0 || dflt : \"00000000\");\n    }\n    \n    scope.setWrgb = function(wrgb, bDelay) {\n        scope.send({\n            topic: scope.msg.topic + 'setwrgb', \n            payload: wrgb\n        });\n        scope.closeDialog(bDelay);\n    }\n    \n    scope.setWrgbWhite = function(wht, bDelay) {\n        const hex = (\"0\"+ (255 * wht / 100 |0).toString(16)).substr(-2);\n        scope.setWrgb(hex + (scope.msg.wrgb || \"000000\").substr(-6), bDelay);\n            // (((parseInt(wrgb || '0', 16) & 0xFFFFFF) | ((255 * tgt / 100) << 24))>>>0).toString(16));\n    }\n    \n    scope.setBySliderWrgb = function() {\n        scope.setWrgbWhite(scope.msg.wh, true);\n    }\n\n    scope.colorWrgb = function() {\n        const {wrgb, rgb} = scope.msg;\n        scope.setWrgb((wrgb || \"00\").substr(0,2) + rgb.substr(1), true);\n    }\n    \n})(scope);\n\n// Get the element that closes the dialog\n$('.dialog-close').on('click', e => {\n    $('.dialog').css(\"display\", \"none\");\n});\n\n// When the user clicks anywhere outside of the dialog, close it\nwindow.onclick = e => {\n    if ($(e.target).hasClass('dialog'))\n        $('.dialog').css(\"display\", \"none\");\n}\n\n</script>\n",
        "output": "str",
        "x": 410,
        "y": 60,
        "wires": [
            [
                "8c50368.ce216c8"
            ]
        ]
    },
    {
        "id": "68dd5b11.091d94",
        "type": "mqtt out",
        "z": "d4b1bd47.24b07",
        "name": "> MQTT",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b83f640b.f9b038",
        "x": 1100,
        "y": 200,
        "wires": []
    },
    {
        "id": "b097fd90.b4b85",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "Dimmers prep",
        "func": "const appl = global.get(\"appliances\");\nconst dev = appl[msg.topic.split('/')[2]];\n    \ndev.forEach(a => {\n    a.lwt = false;\n    if (typeof msg.payload !== \"object\") return;\n    Object.assign(a, msg.payload);\n    let dur;\n    (typeof a.chl === \"number\"? [a.chl] : a.chl)\n        .forEach((c,i,ar) => {\n            const zc = c - ar[0];\n            const cur = a['c'+zc] = a['pwm'+c];\n            if (cur) a['prev'+zc] = cur;\n            if (!msg.payload['dur'+c]) delete a['dur'+c];\n            dur = dur || a['dur'+c];\n        });\n    a.msOff = dur && Date.now() + dur;\n});\n\nglobal.set(\"appliances\", appl);\n\nreturn {dev};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 220,
        "wires": [
            [
                "6a754df3.ecfe44"
            ]
        ]
    },
    {
        "id": "9d83c7a8.347eb8",
        "type": "mqtt in",
        "z": "d4b1bd47.24b07",
        "name": "",
        "topic": "esp/L2/Island/state",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "622279d9.118758"
            ]
        ]
    },
    {
        "id": "622279d9.118758",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "WRGB prep",
        "func": "const appl = global.get(\"appliances\");\nconst dev = appl[msg.topic.split('/')[2]];      // currently only \"Island\"\n    \ndev.forEach(a => {\n    a.lwt = false;\n    if (typeof msg.payload !== \"object\") return;\n    Object.assign(a, msg.payload);\n    (typeof a.chl === \"number\"? [a.chl] : a.chl)\n        .forEach((c,i,ar) => {\n            const zc = c - ar[0];\n            a.aWrgb = [...new Array(4).keys()].map(b => Math.ceil(parseInt(a.wrgb.substr(b*2,2), 16) / 255 * 100));\n            a['c'+zc] = Math.max(...a.aWrgb);\n            a.wh = a.aWrgb[0];\n            a.rgb = \"#\" + a.wrgb.substr(2);\n            if (a.wrgb !== \"00000000\") a['prev'+zc] = a.wrgb;\n        });\n    a.msOff = a.sOff && (Date.now() + (a.sOff*1000));\n});\n\nglobal.set(\"appliances\", appl);\n\nreturn {dev};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 280,
        "wires": [
            [
                "6a754df3.ecfe44"
            ]
        ]
    },
    {
        "id": "81748804.1ecf18",
        "type": "ui_template",
        "z": "d4b1bd47.24b07",
        "group": "c7bb58b6.261158",
        "name": "Island",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 790,
        "y": 220,
        "wires": [
            [
                "6a8ee662.4a0298"
            ]
        ]
    },
    {
        "id": "c6712985.1b7608",
        "type": "ui_template",
        "z": "d4b1bd47.24b07",
        "group": "26ad0dca.e7b0d2",
        "name": "Boiler",
        "order": 3,
        "width": "2",
        "height": "1",
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 790,
        "y": 260,
        "wires": [
            [
                "6a8ee662.4a0298"
            ]
        ]
    },
    {
        "id": "d669265b.c54c38",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "Boiler prep",
        "func": "const appl = global.get(\"appliances\");\nconst dev = appl[msg.topic.split('/')[2]];          // Boiler\n    \ndev.forEach(a => {\n    a.lwt = false;\n    if (typeof msg.payload !== \"object\") return;\n    Object.assign(a, msg.payload);\n    a.disp = a.countDown? a.countDown + \" mins\" : a.numPeople? a.numPeople + \" ->\" + a.target : \"Off\"\n});\n\nglobal.set(\"appliances\", appl);\n\nreturn {dev};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 340,
        "wires": [
            [
                "6a754df3.ecfe44"
            ]
        ]
    },
    {
        "id": "cf476f64.4e79d",
        "type": "mqtt in",
        "z": "d4b1bd47.24b07",
        "name": "",
        "topic": "esp/L3/Boiler/state",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "d669265b.c54c38"
            ]
        ]
    },
    {
        "id": "1435dbe9.9ff354",
        "type": "function",
        "z": "38ee4b91.5dc3e4",
        "name": "Define func",
        "func": "",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nconst my = global.get(\"my\", \"memoryOnly\") || {};\n\nmy.uiControl = (to) => {\n    node.send({payload: to});\n};\n\nglobal.set('my', my, 'memoryOnly');",
        "finalize": "",
        "libs": [],
        "x": 110,
        "y": 520,
        "wires": [
            [
                "a794f086.7875d"
            ]
        ]
    },
    {
        "id": "a794f086.7875d",
        "type": "ui_ui_control",
        "z": "38ee4b91.5dc3e4",
        "name": "",
        "events": "change",
        "x": 300,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "6a8ee662.4a0298",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "Action Dispacher",
        "func": "if (msg.topic)\n    return msg;\nif (msg.apply) {\n    const my = global.get(\"my\", \"memoryOnly\");\n    eval(msg.apply);\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "68dd5b11.091d94"
            ]
        ]
    },
    {
        "id": "cfe3c230.c4ad3",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "group": "e7074671.132b98",
        "name": "Hide Tank",
        "order": 1,
        "width": "1",
        "height": "1",
        "format": "<md-button \n    class=\"myctl vibrate touched\"\n    ng-click=\"send({payload: 'מכשירים'})\">\n    <div>back</div>\n    <font class=\"fa fa-arrow-left fa-2x\" color=#EEE/>\n</md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 100,
        "y": 580,
        "wires": [
            [
                "a794f086.7875d"
            ]
        ]
    },
    {
        "id": "74aad12f.32fb1",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "group": "7cdedc06.5fd6d4",
        "name": "Show MQTT Log",
        "order": 2,
        "width": "1",
        "height": "1",
        "format": "<md-button \n    class=\"myctl vibrate touched\"\n    ng-click=\"send({payload: 'MQTT Log'})\">\n    <div>Log</div>\n    <font class=\"fa fa-list-alt fa-2x\" color=#777></font>\n</md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "a794f086.7875d"
            ]
        ]
    },
    {
        "id": "ee2c9cd1.14704",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "group": "4e465e1b.3d43e",
        "name": "Hide MQTT Log",
        "order": 1,
        "width": "1",
        "height": "1",
        "format": "<md-button \n    class=\"myctl vibrate touched\"\n    ng-click=\"send({payload: 'מכשירים'})\">\n    <div>back</div>\n    <font class=\"fa fa-arrow-left fa-2x\" color=#EEE/>\n</md-button>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "a794f086.7875d"
            ]
        ]
    },
    {
        "id": "dfec6127.1174f",
        "type": "ui_template",
        "z": "38ee4b91.5dc3e4",
        "group": "e7074671.132b98",
        "name": "Grafana - דוד",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div id='div_iframe'>\n    <iframe id=frame frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" src=\"http://razhome1.ddns.net:8085/d/k4AZNmEik/razhome?panelId=2&fullscreen&orgId=1&from=now-12h&to=now&refresh=20s\"/>\n</div>\n<style>\n#div_iframe {\n  overflow-x: auto;\n  width: inherit;\n  height: 100%;\n}\n\n#frame {\n  width: 550px;\n  height: 445px;\n  overflow: hidden;\n}\n</style>\n<script>\n$(document).ready(function() {\n    setTimeout(() => {\n        $('#div_iframe').scrollLeft(1000);\n    }, 2000);\n});\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 490,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "a11ce934.6c0c18",
        "type": "mqtt in",
        "z": "d4b1bd47.24b07",
        "name": "",
        "topic": "esp/Dimmer/+/LWT",
        "qos": "2",
        "datatype": "utf8",
        "broker": "b83f640b.f9b038",
        "nl": false,
        "rap": false,
        "x": 130,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "a9ea2cdd.02bfc",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "LWT prep",
        "func": "const appl = global.get(\"appliances\");\nconst dev = appl[msg.topic.split('/')[2]];\n    \ndev.forEach(a => {\n    a.lwt = Date.now();\n});\n\nglobal.set(\"appliances\", appl);\n\nreturn {dev};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 160,
        "wires": [
            [
                "6a754df3.ecfe44"
            ]
        ]
    },
    {
        "id": "72d37785.6e0c28",
        "type": "mqtt in",
        "z": "d4b1bd47.24b07",
        "name": "",
        "topic": "esp/L3/Shutters/+/state",
        "qos": "2",
        "datatype": "json",
        "broker": "b83f640b.f9b038",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "76e93bea.6d8ef4"
            ]
        ]
    },
    {
        "id": "76e93bea.6d8ef4",
        "type": "function",
        "z": "d4b1bd47.24b07",
        "name": "Shutters prep",
        "func": "const appl = global.get(\"appliances\");\nconst dev = appl[msg.topic.split('/').slice(2, 4).join(\"\")];      // e.g. \"ShuttersParents\"\n    \ndev.forEach(a => {\n    a.lwt = false;\n    if (typeof msg.payload !== \"object\") return;\n    const st = msg.payload;\n    Object.assign(a, st);\n    a.msOff = a.wakeup && (Date.now() + (a.wakeup*1000));\n});\n\nglobal.set(\"appliances\", appl);\n\nreturn {dev};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 400,
        "wires": [
            [
                "6a754df3.ecfe44"
            ]
        ]
    },
    {
        "id": "6c8bf83a.7a92d8",
        "type": "ui_template",
        "z": "d4b1bd47.24b07",
        "group": "e21dc06f.7833",
        "name": "Shutters Parents",
        "order": 3,
        "width": "1",
        "height": "1",
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 830,
        "y": 300,
        "wires": [
            [
                "6a8ee662.4a0298"
            ]
        ]
    },
    {
        "id": "ed24e748.372778",
        "type": "debug",
        "z": "d4b1bd47.24b07",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 60,
        "wires": []
    },
    {
        "id": "de0aaa8d.f5b0d8",
        "type": "ui_template",
        "z": "d4b1bd47.24b07",
        "group": "e21dc06f.7833",
        "name": "מרפסת הורים",
        "order": 3,
        "width": "1",
        "height": "1",
        "format": "",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "6a8ee662.4a0298"
            ]
        ]
    },
    {
        "id": "235a2fc.5c2a9d",
        "type": "template",
        "z": "d4b1bd47.24b07",
        "name": "Btn",
        "field": "template.btn",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "plain",
        "template": "<md-button ng-click=\"myEval(msg, msg.at.a)\" class=\"{{msg.at.cls || 'myctl'}} {{msg.lwt && 'ctl-lwt'}} vibrate touched\" aria-label=\"x\">\n    <div ng-if=\"msg.h\" class=\"{{msg.at.t.startsWith('hdr-')? 'flex30' : ''}}\" >{{msg.h}}</div>\n    <div ng-if=\"msg.h2\" class=\"flex30\" >{{msg.h2}}</div>\n    <div ng-if=\"msg.at.t === 'hdr-icn-val'\" class=\"left-icon\">\n        <md-button ng-click=\"$event.stopPropagation(); $eval(msg.at.a);\" class=\"mysubctl vibrate touched\" aria-label=\"x\">\n            <i ng-if=\"msg.at.icnFa\" class={{msg.at.icnFa}} \n                style=\"color: grey; {{msg.at.iStyle && (!msg.at.iStyleCond || $eval(msg.at.iStyleCond))? msg.at.iStyle : ''}}\"/>\n            <ng-md-icon ng-if=\"msg.at.icnMd\" icon={{msg.at.icnMd}} \n                style=\"fill:{{msg.at.onClr && (!msg.at.onCond || $eval(msg.at.onCond)) ?msg.at.onClr : 'grey'}}\" />\n        </md-button>\n        <div style=\"{{msg.at.vStyle && (!msg.at.vStyleCond || $eval(msg.at.vStyleCond))? msg.at.vStyle : ''}}\">{{$eval(msg.at.v)}}</div>\n    </div>\n    <div ng-if=\"msg.at.t.includes('-val') && msg.at.t !== 'hdr-icn-val'\" class=\"flex\" style=\"{{msg.at.vStyle && (!msg.at.vStyleCond || $eval(msg.at.vStyleCond))? msg.at.vStyle : ''}}\">{{$eval(msg.at.v)}}</div>\n    <i ng-if=\"msg.at.t.startsWith('bgicn-') && msg.at.icnFa\" class=\"{{msg.at.icnFa}}\" \n        style=\"position: absolute; z-index: 4; opacity: 0.8; color: grey; {{msg.at.iStyle && (!msg.at.iStyleCond || $eval(msg.at.iStyleCond))? msg.at.iStyle : ''}}\"/>\n</md-button>\n\n<script>\n\n(function(scope) {\n    scope.myEval = function(msg, evl, elm) {\n        const {send} = scope, {at} = msg; \n        eval(evl);\n    }\n\n})(scope);\n\n</script>\n",
        "output": "str",
        "x": 250,
        "y": 60,
        "wires": [
            [
                "61289668.27fb68"
            ]
        ]
    }
]